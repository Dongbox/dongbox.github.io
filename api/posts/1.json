{"total":28,"pageSize":12,"pageCount":3,"data":[{"title":"剑指Offer-11：旋转数组的最小数字","uid":"90b1ec3d38561ac8554926b985f123c0","slug":"Algorithm/剑指Offer-11：旋转数组的最小数字","date":"2022-12-20T02:33:53.000Z","updated":"2022-12-20T02:46:35.223Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-11：旋转数组的最小数字.json","cover":"https://images.unsplash.com/photo-1671479754018-9fbcb053d608","text":"问题剑指 Offer 11. 旋转数组的最小数字 - 力扣（Leetcode） 把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 给你一个可能存在 重复 元素值的数组 numbers ，它原来是一个升序排列的数组，并按上述情形进行了一次旋转。请返回旋转数组的最小...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":9,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":9,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":5,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true},{"title":"剑指Offer-04：二维数组中的查找","uid":"e5e2148adfe0122b920f670391f658d9","slug":"Algorithm/剑指Offer-04：二维数组中的查找","date":"2022-12-20T01:01:53.000Z","updated":"2022-12-20T01:07:45.820Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-04：二维数组中的查找.json","cover":"https://images.unsplash.com/photo-1664877705363-984a353c0438","text":"问题剑指 Offer 04. 二维数组中的查找 - 力扣（Leetcode） 在一个 n * m 的二维数组中，每一行都按照从左到右 非递减 的顺序排序，每一列都按照从上到下 非递减 的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":9,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":9,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":5,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true},{"title":"剑指Offer-53：0~n中缺失的数字","uid":"7cc307c78d4102bf1aeeccbd33b5d357","slug":"Algorithm/剑指Offer-53：0-n中缺失的数字","date":"2022-12-19T13:26:25.000Z","updated":"2022-12-19T13:34:41.507Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-53：0-n中缺失的数字.json","cover":"https://images.unsplash.com/photo-1657444984080-5c08464bde8c","text":"问题剑指 Offer 53 - II. 0～n-1中缺失的数字 - 力扣（Leetcode） 一个长度为n-1的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围0～n-1之内。在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，请找出这个数字。 # 示例 输入: ...","link":"","photos":[],"count_time":{"symbolsCount":724,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":9,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":9,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":5,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true},{"title":"剑指Offer-53：在排序数组中查找数字Ⅰ","uid":"3cee89fc7f0377ee282368965138239f","slug":"Algorithm/剑指Offer-53：在排序数组中查找数字Ⅰ","date":"2022-12-19T13:10:48.000Z","updated":"2022-12-19T13:34:58.861Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-53：在排序数组中查找数字Ⅰ.json","cover":"https://images.unsplash.com/photo-1670515258571-29149b266666","text":"问题剑指 Offer 53 - I. 在排序数组中查找数字 I - 力扣（Leetcode） 统计一个数字在排序数组中出现的次数。 # 示例 输入: nums = [5,7,7,8,8,10], target = 8 输出: 2 输入: nums = [5,7,7,8,8,10]...","link":"","photos":[],"count_time":{"symbolsCount":827,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":9,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":9,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":5,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"剑指Offer-03：数组中重复的数字","uid":"3fe101fb1734d9c72d92c2b5009ac91d","slug":"Algorithm/剑指Offer-03：数组中重复的数字","date":"2022-12-19T12:43:17.000Z","updated":"2022-12-19T12:58:02.167Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-03：数组中重复的数字.json","cover":"https://images.unsplash.com/photo-1670968982569-81f78c8e841d","text":"问题剑指 Offer 03. 数组中重复的数字 - 力扣（Leetcode） 在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。 # 示例 输入...","link":"","photos":[],"count_time":{"symbolsCount":983,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":9,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":9,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":5,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"剑指Offer-58：左旋转字符串","uid":"d120205b1f477546bf54dd888da16412","slug":"Algorithm/剑指Offer-58：左旋转字符串","date":"2022-12-19T09:42:27.000Z","updated":"2022-12-19T09:48:01.559Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-58：左旋转字符串.json","cover":"https://images.unsplash.com/photo-1671400833073-0a066e059f44","text":"问题字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部。请定义一个函数实现字符串左旋转操作的功能。比如，输入字符串”abcdefg”和数字2，该函数将返回左旋转两位得到的结果”cdefgab”。 # 示例 输入: s = \"abcdefg\", k = 2 输出: \"c...","link":"","photos":[],"count_time":{"symbolsCount":782,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":9,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":9,"path":"api/tags/Leetcode.json"},{"name":"栈","slug":"栈","count":2,"path":"api/tags/栈.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"剑指Offer-24：反转链表","uid":"2c2b58e191552fd1e9252d2bfed9bbd7","slug":"Algorithm/剑指Offer-24：反转链表","date":"2022-12-19T08:56:24.000Z","updated":"2022-12-19T09:00:22.802Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-24：反转链表.json","cover":"https://images.unsplash.com/photo-1668076120526-41f1e4e20214","text":"问题剑指 Offer 24. 反转链表 - 力扣（Leetcode） 定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。 # 示例 输入: 1->2->3->4->5->NULL 输出: 5->4->3->2->1->NULL 方法：temp暂存考虑遍历链表...","link":"","photos":[],"count_time":{"symbolsCount":726,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"链表","slug":"链表","count":2,"path":"api/tags/链表.json"},{"name":"Algorithm","slug":"Algorithm","count":9,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":9,"path":"api/tags/Leetcode.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"剑指Offer-06：从尾到头打印链表","uid":"c8c4451151af101d353c3e3bce84b1fa","slug":"Algorithm/剑指Offer-06：从尾到头打印链表","date":"2022-12-19T08:03:03.000Z","updated":"2022-12-19T08:24:41.532Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-06：从尾到头打印链表.json","cover":null,"text":"问题剑指 Offer 06. 从尾到头打印链表 - 力扣（Leetcode） 输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。 # 示例 输入：head = [1,3,2] 输出：[2,3,1] 方法：辅助栈法算法流程： 入栈： 遍历链表，将各节点值 push...","link":"","photos":[],"count_time":{"symbolsCount":843,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"链表","slug":"链表","count":2,"path":"api/tags/链表.json"},{"name":"Algorithm","slug":"Algorithm","count":9,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":9,"path":"api/tags/Leetcode.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"剑指Offer-30：包含min函数的栈","uid":"cec078924c15a69261a840497da55575","slug":"Algorithm/剑指Offer-30：包含min函数的栈","date":"2022-12-19T06:07:01.000Z","updated":"2022-12-19T08:59:55.573Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-30：包含min函数的栈.json","cover":"https://images.unsplash.com/photo-1667747501985-40fa56e5cebc","text":"问题：剑指 Offer 30. 包含min函数的栈 - 力扣（Leetcode） 定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的 min 函数在该栈中，调用 min、push 及 pop 的时间复杂度都是 O(1)。 # 示例 MinStack minStack =...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":9,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":9,"path":"api/tags/Leetcode.json"},{"name":"栈","slug":"栈","count":2,"path":"api/tags/栈.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：进程和线程","uid":"02a08c5f44cac23b9de92edc205edce8","slug":"Python/Python：进程和线程","date":"2022-12-17T02:26:37.000Z","updated":"2022-12-17T03:03:52.816Z","comments":true,"path":"api/articles/Python/Python：进程和线程.json","cover":"https://images.unsplash.com/photo-1671154453575-b0cea38bb19a","text":" 进程——资源分配的最小单位，线程——程序执行的最小单位 简介 进程（Process） 进程的目的就是担当分配系统资源（CPU时间、内存等）的基本单位。 线程（thread） 线程是进程的一个执行流，是CPU调度和分派的基本单位，它是比进程更小的能独立运行的基本单位。 进程有独立...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python: Django Model中的F&Q","uid":"f66713f2a78be6074d97eaab35246620","slug":"Python/Python：Django-Model中的F-Q","date":"2022-12-13T14:47:48.000Z","updated":"2022-12-13T14:55:08.080Z","comments":true,"path":"api/articles/Python/Python：Django-Model中的F-Q.json","cover":"https://images.unsplash.com/photo-1669045236900-9988510e0e69","text":"关于FF作用：操作数据表中的某列值，也就是数据库中的某个字段，F()允许Django在未实际链接数据的情况下具有对数据库字段的值的引用，不用获取对象放在内存中再对字段进行操作，直接执行原生产sql语句操作 使用场景：对数据库中的所有的商品，在原价格的基础上涨价10元 from d...","link":"","photos":[],"count_time":{"symbolsCount":510,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"},{"name":"Django","slug":"Django","count":4,"path":"api/tags/Django.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"深入Python","uid":"48a973ff2817f5c6922953ec99a3d627","slug":"Python/深入Python","date":"2022-12-13T07:33:51.000Z","updated":"2022-12-14T08:24:18.651Z","comments":true,"path":"api/articles/Python/深入Python.json","cover":"https://images.unsplash.com/photo-1669192532750-5165016ad000","text":"魔术方法 __init__ 为构建好的对象赋予初始化 __new__ 分配内存空间，并返回构建好的对象（地址） __del__ 从内存中清除对象，对象会默认执行方法。具体执行的时间节点 __call__ 当作函数执行时会被默认自动调用 __str__ 打印一个对象的时候，默认调用...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}}]}