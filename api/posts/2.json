{"total":26,"pageSize":12,"pageCount":3,"data":[{"title":"Python：Django模型类","uid":"8410d9c49c9d1e56959240bb5a60df1e","slug":"Python/Python：Django模型类","date":"2022-12-10T08:17:36.000Z","updated":"2022-12-13T14:48:20.209Z","comments":true,"path":"api/articles/Python/Python：Django模型类.json","cover":"https://images.unsplash.com/photo-1658953229664-e8d5ebd039ba","text":"ORM简介ORM，全称Object Relational MAPPing，中文叫做对象关系映射，通过ORM我们可以通过类的方式去操作数据库，而不用再写原生的SQL语句。通过把表映射成类，把行作实例，把字段作为属性，ORM在执行对象操作的时候最终还是会把对应的操作转换为数据库原生语...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"},{"name":"Django","slug":"Django","count":4,"path":"api/tags/Django.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：闭包","uid":"1e75bb07e5af1c2f8f74b87cd88f4fd3","slug":"Python/Python：闭包","date":"2022-12-10T07:50:14.000Z","updated":"2022-12-13T10:39:47.097Z","comments":true,"path":"api/articles/Python/Python：闭包.json","cover":"https://images.unsplash.com/photo-1657212850528-c738d087e6f8","text":"简介在一些语言中，在函数中可以（嵌套）定义另一个函数时，如果内部的函数引用了外部的函数的变量，则可能产生闭包。闭包可以用来在一个函数与一组“私有”变量之间创建关联关系。在给定函数被多次调用的过程中，这些私有变量能够保持其持久性。 上面这段话实际上解释了闭包的一个定义和两个作用： ...","link":"","photos":[],"count_time":{"symbolsCount":967,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"MYSQL优化与多表查询","uid":"44618c7f6520782d55b1b922f6fa7af4","slug":"Database/MYSQL优化与多表查询","date":"2022-12-10T05:52:12.000Z","updated":"2022-12-13T14:53:11.799Z","comments":true,"path":"api/articles/Database/MYSQL优化与多表查询.json","cover":"https://images.unsplash.com/photo-1665512983234-5053c892365b","text":"参考文章 最全Mysql查询性能优化总结（超详细） - 知乎 (zhihu.com) 【MySQL笔记】多表查询（JOIN ON）_java小白。。的博客-CSDN博客_mysql join on MySQL索引底层实现原理（B树和B+树）_BugMaker-shen的博客-CS...","link":"","photos":[],"count_time":{"symbolsCount":158,"symbolsTime":"1 mins."},"categories":[{"name":"Database","slug":"Database","count":3,"path":"api/categories/Database.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"排序算法","uid":"557c3a65716469700d953ea750417d1a","slug":"Algorithm/排序算法","date":"2022-12-10T05:12:35.000Z","updated":"2022-12-13T10:38:48.385Z","comments":true,"path":"api/articles/Algorithm/排序算法.json","cover":"https://images.unsplash.com/photo-1643142326340-7a4c55a09745","text":"归并排序算法思想 归并排序是一种递归算法，它持续地将一个列表分成两半。如果列表是空的或者 只有一个元素，那么根据定义，它就被排序好了（最基本的情况）。如果列表里的元素超过一个，我们就把列表拆分，然后分别对两个部分调用递归排序。一旦这两个部分被排序好了，然后就可以对这两部分数列进行...","link":"","photos":[],"count_time":{"symbolsCount":680,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":2,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"数据结构：堆和栈","uid":"061f80859bc6d460d6ca6944c3b9b34e","slug":"Algorithm/数据结构：堆和栈","date":"2022-12-10T03:50:12.000Z","updated":"2022-12-13T10:39:12.339Z","comments":true,"path":"api/articles/Algorithm/数据结构：堆和栈.json","cover":"https://images.unsplash.com/photo-1670188100630-650c52f61c2a","text":"什么是堆（一）堆的定义一个大小为 n 的堆（heap） 是一棵包含 n 个结点的 完全二叉树，其根节点称为堆顶，根据堆中亲自结点的大小关系，堆可以分为两类。（1）最小堆：如果树中每个结点的元素都小于或等于其孩子结点的元素，则称该堆为最小堆。在最小堆中，堆顶存储的元素是整棵树中最小...","link":"","photos":[],"count_time":{"symbolsCount":577,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":2,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"向量化–one-hot编码/数据分箱","uid":"012543d9b947c1da60945007fb97dc9c","slug":"向量化–one-hot编码-数据分箱","date":"2022-12-10T03:12:32.000Z","updated":"2022-12-13T10:39:23.516Z","comments":true,"path":"api/articles/向量化–one-hot编码-数据分箱.json","cover":"https://images.unsplash.com/photo-1666899388931-cb2a70cff398","text":"为什么使用One-Hot编码？对于机器学习任务中，特征并不总是连续值，很多是分类值。这些分类值本身没有大小的意义。为了将数据集中一个分类变量替换为一个或多个新特征，我们使用One-Hot编码对数据进行预处理。 因为大部分算法是基于向量空间中的度量来进行计算的，为了使非偏序关系的变...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Feature Engineering","slug":"Feature-Engineering","count":1,"path":"api/categories/Feature-Engineering.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Tornado与WSGI","uid":"425ef74df346723b32c51d5af54d8ea2","slug":"Tornado与WSGI","date":"2022-12-10T03:00:35.000Z","updated":"2022-12-13T10:40:33.560Z","comments":true,"path":"api/articles/Tornado与WSGI.json","cover":"https://images.unsplash.com/photo-1667101011264-7b8a403c4d7b","text":"简介tornado是由F打头的404网站收购并且开源出来的Web框架, 他的第一个特点奏是将HTTP服务器和Web应用整合到了一起. 所以可以用tornado搭建出来的服务器模型如下 这就是我们刚才说的接受请求, 处理请求, 返回请求都是一个人, 感觉也不错. 但是请注意了, 虽...","link":"","photos":[],"count_time":{"symbolsCount":723,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：进程、线程与协程","uid":"47bf6e8451025e3a41bf23052e6c8743","slug":"Python/Python：进程、线程与协程","date":"2022-12-10T02:54:10.000Z","updated":"2022-12-13T10:39:51.187Z","comments":true,"path":"api/articles/Python/Python：进程、线程与协程.json","cover":"https://images.unsplash.com/photo-1667423520863-8653106f18e7","text":"基本概念进程(Process)进程是应用程序的启动实例，进程拥有代码和打开的文件资源、数据资源、独立的内存空间。 线程(Lightweight Process，LWP)线程从属于进程，是程序的实际执行者，一个进程至少包含一个主线程，也可以有更多的子线程，线程拥有自己的栈空间。对操...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"ModelFirst与DBFirst","uid":"16a21e0bb1a0e0b088f32d8aa8cd1960","slug":"ModelFirst-DBFirst区别？","date":"2022-12-10T02:43:08.000Z","updated":"2022-12-13T10:39:32.519Z","comments":true,"path":"api/articles/ModelFirst-DBFirst区别？.json","cover":"https://images.unsplash.com/photo-1669092160303-1e79fdff702d","text":" EF（Entity Framework（实体框架））是微软出品的用来操作数据库的一个框架。 EF 的三种设计模型：CodeFirst，ModelFirst，DBFirst。ModelFirst是首先设计实体模型，之后根据实体模型实现到数据库的映射。DBFirst是先进行数据库的...","link":"","photos":[],"count_time":{"symbolsCount":356,"symbolsTime":"1 mins."},"categories":[{"name":"Database","slug":"Database","count":3,"path":"api/categories/Database.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：celery队列","uid":"79863d3505b89f135bc4e3895976782e","slug":"Python/Python：celery队列","date":"2022-12-10T02:35:04.000Z","updated":"2022-12-13T10:39:57.317Z","comments":true,"path":"api/articles/Python/Python：celery队列.json","cover":"https://images.unsplash.com/photo-1666543257223-095dcc9a12fd","text":"Celery简介1. 什么是任务队列任务队列是一种用于在线程或计算机之间分配工作的机制。 任务队列的输入是一个称为任务的工作单元，有专门的职程（Worker）进行不断的监视任务队列，进行执行新的任务工作。 Celery 通过消息机制进行通信，通常使用中间件（Broker）作为客户...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"},{"name":"MQ","slug":"MQ","count":1,"path":"api/tags/MQ.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：redis，有哪些数据结构？怎么保存的?","uid":"ec7492543a6f387abaa8748f7f56ced2","slug":"Database/redis用过哪些数据结构？怎么保存的","date":"2022-12-09T12:15:37.000Z","updated":"2022-12-17T07:38:01.740Z","comments":true,"path":"api/articles/Database/redis用过哪些数据结构？怎么保存的.json","cover":"https://images.unsplash.com/photo-1666126444655-23492b1532e2","text":"Redis 的五种基本数据类型String（字符串）简介:String是Redis最基础的数据结构类型，它是二进制安全的，可以存储图片或者序列化的对象，值最大存储为512M 简单使用举例: set key value、get key等 应用场景：共享session、分布式锁，计数...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"Database","slug":"Database","count":3,"path":"api/categories/Database.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"简述一个前端请求的处理流程，uWSGI/nginx/django之间的处理流程","uid":"3850b7ec8b4d03677d6c891acbbc423d","slug":"简述一个前端请求的处理流程，uwsgi-nginx-django之间的处理流程","date":"2022-12-09T06:07:57.000Z","updated":"2022-12-13T10:38:23.526Z","comments":true,"path":"api/articles/简述一个前端请求的处理流程，uwsgi-nginx-django之间的处理流程.json","cover":"https://images.unsplash.com/photo-1666625628272-a1071f6f7173","text":"Nginx 资源缓存 负载均衡 方向代理 缓存请求 提高并发 WSGIWeb服务器网关接口（Python Web Server Gateway Interface，缩写为WSGI）是为Python语言定义的Web服务器和Web应用程序或框架之间的一种简单而通用的接口 Django...","link":"","photos":[],"count_time":{"symbolsCount":802,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"},{"name":"HTTP","slug":"HTTP","count":1,"path":"api/tags/HTTP.json"},{"name":"Django","slug":"Django","count":4,"path":"api/tags/Django.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}}]}