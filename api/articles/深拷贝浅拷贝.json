{"title":"深拷贝浅拷贝","uid":"698d6b72538462fa89b3c934a0b1d2e9","slug":"深拷贝浅拷贝","date":"2022-12-07T13:46:32.000Z","updated":"2022-12-09T02:03:00.649Z","comments":false,"path":"api/articles/深拷贝浅拷贝.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666625628272-a1071f6f7173","content":"<h2 id=\"1、Python-深拷贝和浅拷贝概念理解\"><a href=\"#1、Python-深拷贝和浅拷贝概念理解\" class=\"headerlink\" title=\"1、Python 深拷贝和浅拷贝概念理解\"></a>1、Python 深拷贝和浅拷贝概念理解</h2><h3 id=\"前提知识\"><a href=\"#前提知识\" class=\"headerlink\" title=\"前提知识\"></a>前提知识</h3><ul>\n<li><p>Python 中对象包含的三个基本要素，分别是：id(身份标识)、type(数据类型)和value(值)。</p>\n</li>\n<li><p><code>is</code>和 <code>==</code> 都是对对象进行比较判断作用的，但比较判断的内容并不相同：</p>\n<ul>\n<li><p><code>==</code> 是python标准操作符中的<strong>比较</strong>操作符，用来比较判断两个对象的 value (值) 是否相等。</p>\n</li>\n<li><p><code>is</code> 也被叫做<strong>同一性</strong>运算符，这个运算符比较判断的是对象间的唯一身份标识，也就是说它判断的是两个对象的 id是否相同。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>浅拷贝：重新分配一块内存，创建一个新的对象，但里面的元素是对原对象中各个子对象的引用（原地址）。</p>\n<p>深拷贝：重新分配一块内存，创建一个新的对象，并且将原对象中的元素，以递归的方式，通过创建新的子对象拷贝到新对象中（新地址）。因此，新对象和原对象没有任何关联。</p>\n<h3 id=\"直接的例子\"><a href=\"#直接的例子\" class=\"headerlink\" title=\"直接的例子\"></a>直接的例子</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token number\">1.</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> copy\n<span class=\"token number\">2.</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token number\">3.</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> b <span class=\"token operator\">=</span> a\n<span class=\"token number\">4.</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> c <span class=\"token operator\">=</span> copy<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token number\">5.</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> d <span class=\"token operator\">=</span> copy<span class=\"token punctuation\">.</span>deepcopy<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token number\">6.</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>\n<span class=\"token number\">7.</span><span class=\"token punctuation\">(</span><span class=\"token number\">94423772740928</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94423772740928</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94423772740928</span><span class=\"token punctuation\">,</span> <span class=\"token number\">94423772740928</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 无论采用哪种拷贝方式，都是完全相同的内存地址，因为只是增加了一个引用计数</span>\n<span class=\"token number\">8.</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> e <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 即使是直接赋值，只要值相同，也是与上面相同的内存地址</span>\n<span class=\"token number\">9.</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n<span class=\"token number\">10.94423772740928</span>\n<span class=\"token number\">11.</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token number\">12.</span><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token number\">13.94423772740960</span> <span class=\"token comment\"># 一旦值不同，内存地址就不同</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"浅拷贝的产生\"><a href=\"#浅拷贝的产生\" class=\"headerlink\" title=\"浅拷贝的产生\"></a>浅拷贝的产生</h3><ul>\n<li>使用数据类型<strong>本身的构造器</strong></li>\n<li>对于<strong>可变的序列</strong>，还可以通过切片操作符 : 来完成浅拷贝（元组、字符串除外）。</li>\n<li>Python 还提供了对应的函数 <strong>copy.copy()</strong> 函数，适用于任何数据类型</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>当内层为可变数据类型时，深拷贝后内层外层地址均发生改变。当内层为不可变数据类型时，外层不管是可变还是不可变数据类型，使用深拷贝，都不会改变内层地址，只会在外层为可变数据类型时，改变外层地址。</p>\n<p>使用浅拷贝是只能在外层数据类型为可变数据类型时，才能改变外层地址。而内层地址，无论是否为可变数据类型还是不可变数据类型，使用浅拷贝都不会改变内层数据类型地址。</p></blockquote>\n<h2 id=\"Ref\"><a href=\"#Ref\" class=\"headerlink\" title=\"Ref\"></a>Ref</h2><ul>\n<li><p><a href=\"https://blog.csdn.net/Elon15/article/details/125256787\">Python中的浅拷贝和深拷贝（一看就懂！！！）_时代&amp;信念的博客-CSDN博客_python 深拷贝 浅拷贝</a></p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/bcnchina/article/details/106032854\">cloudflare加速博客网站出现“此页面不能正确地重定向”的解决办法_喆旭电科的博客-CSDN博客_如何解决cloudflare</a></p>\n</li>\n</ul>\n","text":"1、Python 深拷贝和浅拷贝概念理解前提知识 Python 中对象包含的三个基本要素，分别是：id(身份标识)、type(数据类型)和value(值)。 is和 == 都是对对象进行比较判断作用的，但比较判断的内容并不相同： == 是python标准操作符中的比较操作符，用来...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Python","slug":"Python","count":8,"path":"api/tags/Python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81Python-%E6%B7%B1%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%B5%85%E6%8B%B7%E8%B4%9D%E6%A6%82%E5%BF%B5%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">1、Python 深拷贝和浅拷贝概念理解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%89%8D%E6%8F%90%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">前提知识</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">简介</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E6%8E%A5%E7%9A%84%E4%BE%8B%E5%AD%90\"><span class=\"toc-text\">直接的例子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%85%E6%8B%B7%E8%B4%9D%E7%9A%84%E4%BA%A7%E7%94%9F\"><span class=\"toc-text\">浅拷贝的产生</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Ref\"><span class=\"toc-text\">Ref</span></a></li></ol>","author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"我的Hexo开发指南","uid":"9a515d5665a08874b409b4ff5ca7a5ad","slug":"我的Hexo开发指南","date":"2022-12-09T02:10:33.000Z","updated":"2022-12-10T02:34:00.773Z","comments":true,"path":"api/articles/我的Hexo开发指南.json","keywords":null,"cover":"https://images.unsplash.com/photo-1670401781625-9eac9c7aaab2","text":"简介作为一个Hexo小白，现在我想要拥有一个Hexo的Aurora主题的博客网站，同时我还有一个域名（dongbox.space），我想通过这个域名访问到我的Hexo静态资源，但我没有服务器，所以我打算直接部署在pages服务上，我选择了Github Pages，整个部署过程会分...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Hexo","slug":"Hexo","count":1,"path":"api/tags/Hexo.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},"next_post":{}}