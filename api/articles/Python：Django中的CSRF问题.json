{"title":"Python：Django中的CSRF问题","uid":"644c73fd2c19b0a9e69da32b079c908d","slug":"Python：Django中的CSRF问题","date":"2022-12-10T09:16:23.000Z","updated":"2022-12-11T08:28:06.964Z","comments":true,"path":"api/articles/Python：Django中的CSRF问题.json","keywords":null,"cover":"https://images.unsplash.com/photo-1661366050919-a14b46efee21","content":"<h3 id=\"CORS简介\"><a href=\"#CORS简介\" class=\"headerlink\" title=\"CORS简介\"></a>CORS简介</h3><p>CORS是一种允许与托管在不同域上的资源进行交互的机制。例如，应用它的最常见场景之一是Ajax请求。</p>\n<p>为了说明CORS是如何工作的，让我们假设您有一个位于domain.com中的web应用程序。但是，为了保存用户信息，应用程序调用部署在另一个url中的API，例如api.domain.com。因此，当将保存数据的请求发送到api.domain.com时，服务器将根据请求的头信息和请求的来源来校验请求。</p>\n<p>如果允许服务器中的URL domain.com，它将提供正确的响应。如果不允许该域，服务器将抛出一个异常。此信息交换使用HTTP报头进行。</p>\n<p>如果有CORS的需要，可以直接安装<code>corsheaders</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> django-cors-headers <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"CSRF简介\"><a href=\"#CSRF简介\" class=\"headerlink\" title=\"CSRF简介\"></a>CSRF简介</h3><p>CSRF（Cross-site request forgery），中文名称：跨站请求伪造，也被称为：one click attack/session riding，缩写为：CSRF/XSRF。</p>\n<h5 id=\"模板请求\"><a href=\"#模板请求\" class=\"headerlink\" title=\"模板请求\"></a>模板请求</h5><p>在Django中，如果是直接使用模板来定义的话，那么可以直接声明：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token punctuation\">&#123;</span> <span class=\"token operator\">%</span> csrf_token <span class=\"token operator\">%</span> <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h5 id=\"Ajax请求\"><a href=\"#Ajax请求\" class=\"headerlink\" title=\"Ajax请求\"></a>Ajax请求</h5><p>csrftoken这个值可以从cookie的<code>csrftoken</code>获取到。</p>\n<p>验证则有两种方式进行：</p>\n<ul>\n<li><p>在请求头中定义<code>X-CSRFToken</code>参数。</p>\n</li>\n<li><p>在数据中定义<code>csrf_token</code>属性一同传过去</p>\n</li>\n</ul>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3><h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><a href=\"https://www.stackhawk.com/blog/django-cors-guide/\">Django CORS Guide: What It Is and How to Enable It (stackhawk.com)</a></li>\n</ul>\n","feature":true,"text":"CORS简介CORS是一种允许与托管在不同域上的资源进行交互的机制。例如，应用它的最常见场景之一是Ajax请求。 为了说明CORS是如何工作的，让我们假设您有一个位于domain.com中的web应用程序。但是，为了保存用户信息，应用程序调用部署在另一个url中的API，例如ap...","link":"","photos":[],"count_time":{"symbolsCount":690,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":15,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Python","slug":"Python","count":10,"path":"api/tags/Python.json"},{"name":"Django","slug":"Django","count":3,"path":"api/tags/Django.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CORS%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">CORS简介</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CSRF%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">CSRF简介</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E6%9D%BF%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">模板请求</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Ajax%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">Ajax请求</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">参考文章</span></a></li></ol>","author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Python：Python2与Python3","uid":"c4c29a0f3ee5d4305d5533c1af569c42","slug":"Python：Python2与Python3","date":"2022-12-10T13:20:33.000Z","updated":"2022-12-11T02:58:28.516Z","comments":true,"path":"api/articles/Python：Python2与Python3.json","keywords":null,"cover":"https://images.unsplash.com/photo-1670258897358-1e0347859dab","text":" print() vs print Unicode vs ASCII 除法：浮点 vs 整数 StandardError废弃，统一使用Exception；raise去除raise IOError, &quot;&quot;格式，统一为raise IOError(&quot;fil...","link":"","photos":[],"count_time":{"symbolsCount":383,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":15,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Python","slug":"Python","count":10,"path":"api/tags/Python.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Python：Django模型类","uid":"8410d9c49c9d1e56959240bb5a60df1e","slug":"Python：Django模型类","date":"2022-12-10T08:17:36.000Z","updated":"2022-12-10T09:40:44.609Z","comments":true,"path":"api/articles/Python：Django模型类.json","keywords":null,"cover":"https://images.unsplash.com/photo-1658953229664-e8d5ebd039ba","text":"模型类继承一共有三种继承模式： 抽象基类 多表继承 代理模型 1. 抽象基类该模型将不会创建任何数据表。当其用作其它模型类的基类时，它的字段会自动添加至子类。 from django.db import models class CommonInfo(models.Model):...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":15,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Python","slug":"Python","count":10,"path":"api/tags/Python.json"},{"name":"Django","slug":"Django","count":3,"path":"api/tags/Django.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}}}