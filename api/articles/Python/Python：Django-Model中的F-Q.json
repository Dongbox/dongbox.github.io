{"title":"Python: Django Model中的F&Q","uid":"f66713f2a78be6074d97eaab35246620","slug":"Python/Python：Django-Model中的F-Q","date":"2022-12-13T14:47:48.000Z","updated":"2022-12-13T14:55:08.080Z","comments":true,"path":"api/articles/Python/Python：Django-Model中的F-Q.json","keywords":null,"cover":"https://images.unsplash.com/photo-1669045236900-9988510e0e69","content":"<h2 id=\"关于F\"><a href=\"#关于F\" class=\"headerlink\" title=\"关于F\"></a>关于F</h2><p>F作用：操作数据表中的某列值，也就是数据库中的某个字段，F()允许Django在未实际链接数据的情况下具有对数据库字段的值的引用，不用获取对象放在内存中再对字段进行操作，直接执行原生产<a href=\"https://so.csdn.net/so/search?q=sql%E8%AF%AD%E5%8F%A5&spm=1001.2101.3001.7020\">sql语句</a>操作</p>\n<p>使用场景：对数据库中的所有的商品，在原价格的基础上涨价10元</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> F\n<span class=\"token keyword\">from</span> app01<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Book\nBook<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>price<span class=\"token operator\">=</span>F<span class=\"token punctuation\">(</span><span class=\"token string\">\"price\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 对于book表中每本书的价格都在原价格的基础上增加20元</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"关于Q\"><a href=\"#关于Q\" class=\"headerlink\" title=\"关于Q\"></a>关于Q</h2><p>Q作用：对对象进行复杂查询，并支持&amp;（and）,|（or），~（not）操作符</p>\n<p>使用场景：filter查询条件只有一个，而使用Q可以设置多个查询条件</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Q\nsearch_obj<span class=\"token operator\">=</span>Asset<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">(</span>hostname__icontains<span class=\"token operator\">=</span>keyword<span class=\"token punctuation\">)</span><span class=\"token operator\">|</span>Q<span class=\"token punctuation\">(</span>ip<span class=\"token operator\">=</span>keyword<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><ul>\n<li><a href=\"https://blog.csdn.net/Tubby__/article/details/105069594\">Django中F和Q的区别_Tubby__的博客-CSDN博客_django f q</a></li>\n</ul>\n","text":"关于FF作用：操作数据表中的某列值，也就是数据库中的某个字段，F()允许Django在未实际链接数据的情况下具有对数据库字段的值的引用，不用获取对象放在内存中再对字段进行操作，直接执行原生产sql语句操作 使用场景：对数据库中的所有的商品，在原价格的基础上涨价10元 from d...","link":"","photos":[],"count_time":{"symbolsCount":510,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"},{"name":"Django","slug":"Django","count":4,"path":"api/tags/Django.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8EF\"><span class=\"toc-text\">关于F</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8EQ\"><span class=\"toc-text\">关于Q</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">参考文章</span></a></li></ol>","author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Python：进程和线程","uid":"02a08c5f44cac23b9de92edc205edce8","slug":"Python/Python：进程和线程","date":"2022-12-17T02:26:37.000Z","updated":"2022-12-17T03:03:52.816Z","comments":true,"path":"api/articles/Python/Python：进程和线程.json","keywords":null,"cover":"https://images.unsplash.com/photo-1671154453575-b0cea38bb19a","text":" 进程——资源分配的最小单位，线程——程序执行的最小单位 简介 进程（Process） 进程的目的就是担当分配系统资源（CPU时间、内存等）的基本单位。 线程（thread） 线程是进程的一个执行流，是CPU调度和分派的基本单位，它是比进程更小的能独立运行的基本单位。 进程有独立...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},"next_post":{"title":"深入Python","uid":"48a973ff2817f5c6922953ec99a3d627","slug":"Python/深入Python","date":"2022-12-13T07:33:51.000Z","updated":"2022-12-14T08:24:18.651Z","comments":true,"path":"api/articles/Python/深入Python.json","keywords":null,"cover":"https://images.unsplash.com/photo-1669192532750-5165016ad000","text":"魔术方法 __init__ 为构建好的对象赋予初始化 __new__ 分配内存空间，并返回构建好的对象（地址） __del__ 从内存中清除对象，对象会默认执行方法。具体执行的时间节点 __call__ 当作函数执行时会被默认自动调用 __str__ 打印一个对象的时候，默认调用...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}}}