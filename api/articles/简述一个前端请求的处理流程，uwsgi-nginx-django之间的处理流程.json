{"title":"简述一个前端请求的处理流程，uWSGI/nginx/django之间的处理流程","uid":"3850b7ec8b4d03677d6c891acbbc423d","slug":"简述一个前端请求的处理流程，uwsgi-nginx-django之间的处理流程","date":"2022-12-09T06:07:57.000Z","updated":"2022-12-11T07:54:01.728Z","comments":true,"path":"api/articles/简述一个前端请求的处理流程，uwsgi-nginx-django之间的处理流程.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666625628272-a1071f6f7173","content":"<h3 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h3><ul>\n<li><p>资源缓存</p>\n</li>\n<li><p>负载均衡</p>\n</li>\n<li><p>方向代理</p>\n</li>\n<li><p>缓存请求</p>\n</li>\n<li><p>提高并发</p>\n</li>\n</ul>\n<h3 id=\"WSGI\"><a href=\"#WSGI\" class=\"headerlink\" title=\"WSGI\"></a>WSGI</h3><p><strong>Web服务器网关接口</strong>（<strong>Python Web Server Gateway Interface</strong>，缩写为WSGI）是为<a href=\"https://baike.baidu.com/item/Python?fromModule=lemma_inlink\">Python</a>语言定义的<a href=\"https://baike.baidu.com/item/Web%E6%9C%8D%E5%8A%A1%E5%99%A8?fromModule=lemma_inlink\">Web服务器</a>和Web应用程序或<a href=\"https://baike.baidu.com/item/%E6%A1%86%E6%9E%B6?fromModule=lemma_inlink\">框架</a>之间的一种简单而通用的<a href=\"https://baike.baidu.com/item/%E6%8E%A5%E5%8F%A3?fromModule=lemma_inlink\">接口</a></p>\n<h3 id=\"Django的内部处理流程\"><a href=\"#Django的内部处理流程\" class=\"headerlink\" title=\"Django的内部处理流程\"></a>Django的内部处理流程</h3><p><img src=\"https://img-blog.csdnimg.cn/641a6fc4430a475683783ff96238024b.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li><p>用户浏览器发起http请求</p>\n</li>\n<li><p>请求首先到达 Request Middleware 中间件，它能在views 收到请求前对Request消息内容进行处理，发送响应。</p>\n</li>\n<li><p>urls.py 中的 URLConf 对收到请求的url进行匹配，找到相应的视图处理函数或视图类。</p>\n</li>\n<li><p>在View收到请求之前，View Middlewares 被调用， 可以进行一些预处理。</p>\n</li>\n<li><p>视图函数或视图类被调用，视图函数可能访问模型数据 or 调用 form 生成表单对象。</p>\n</li>\n<li><p>所有 model-to-DB 的交互都通过 manager 对象来完成。</p>\n</li>\n<li><p>Views 可通以通过context 对象来添加更多传给模板的内容，Views 将 context 上下文数据传给模板进行渲染。</p>\n</li>\n<li><p>模板层使用 Filter与 Tags 渲染输出。</p>\n</li>\n<li><p>模板层将渲染结果 传回给 视图层。</p>\n</li>\n<li><p>视图层发送HTTPResponse 给Response Middlerwares 中间件。</p>\n</li>\n<li><p>Ｒesponse middlewares中间件可以向　Response 消息添加额外内容，或者用1个新消息替代。</p>\n</li>\n<li><p>wsgi 网关发送 response 给用户浏览器。</p>\n</li>\n</ul>\n<h4 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h4><ul>\n<li><p><a href=\"https://zhuanlan.zhihu.com/p/46983059\">尝试理解Flask源码 之 搞懂WSGI协议 - 知乎 (zhihu.com)</a></p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/captain5339/article/details/127691229\">一张图读懂 Django Web请求处理的完整流程_雕弓的博客-CSDN博客_django 消息</a></p>\n</li>\n<li><p><a href=\"https://zhuanlan.zhihu.com/p/172514847\">【web前端】详解Tornado web框架！ - 知乎 (zhihu.com)</a></p>\n</li>\n</ul>\n","text":"Nginx 资源缓存 负载均衡 方向代理 缓存请求 提高并发 WSGIWeb服务器网关接口（Python Web Server Gateway Interface，缩写为WSGI）是为Python语言定义的Web服务器和Web应用程序或框架之间的一种简单而通用的接口 Django...","link":"","photos":[],"count_time":{"symbolsCount":802,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":15,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Python","slug":"Python","count":10,"path":"api/tags/Python.json"},{"name":"Django","slug":"Django","count":3,"path":"api/tags/Django.json"},{"name":"HTTP","slug":"HTTP","count":1,"path":"api/tags/HTTP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Nginx\"><span class=\"toc-text\">Nginx</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#WSGI\"><span class=\"toc-text\">WSGI</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Django%E7%9A%84%E5%86%85%E9%83%A8%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">Django的内部处理流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">参考文章</span></a></li></ol></li></ol>","author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"redis用过哪些数据结构？怎么保存的?","uid":"06c05b6d3f59577fc268e145e3219741","slug":"redis用过哪些数据结构？怎么保存的","date":"2022-12-09T12:15:37.000Z","updated":"2022-12-11T04:59:36.335Z","comments":true,"path":"api/articles/redis用过哪些数据结构？怎么保存的.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666126444655-23492b1532e2","text":"Redis 的五种基本数据类型String（字符串）简介:String是Redis最基础的数据结构类型，它是二进制安全的，可以存储图片或者序列化的对象，值最大存储为512M 简单使用举例: set key value、get key等 应用场景：共享session、分布式锁，计数...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":15,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Database","slug":"Database","count":3,"path":"api/tags/Database.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},"next_post":{"title":"我的Hexo开发指南","uid":"9a515d5665a08874b409b4ff5ca7a5ad","slug":"我的Hexo开发指南","date":"2022-12-09T02:10:33.000Z","updated":"2022-12-10T02:34:00.773Z","comments":true,"path":"api/articles/我的Hexo开发指南.json","keywords":null,"cover":"https://images.unsplash.com/photo-1670401781625-9eac9c7aaab2","text":"简介作为一个Hexo小白，现在我想要拥有一个Hexo的Aurora主题的博客网站，同时我还有一个域名（dongbox.space），我想通过这个域名访问到我的Hexo静态资源，但我没有服务器，所以我打算直接部署在pages服务上，我选择了Github Pages，整个部署过程会分...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Hexo","slug":"Hexo","count":1,"path":"api/tags/Hexo.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}}}