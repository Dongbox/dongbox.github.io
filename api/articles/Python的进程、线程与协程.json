{"title":"Python的进程、线程与协程","uid":"ccbf010a2724b48dcbd5eacdb488a88a","slug":"Python的进程、线程与协程","date":"2022-12-10T02:54:10.000Z","updated":"2022-12-10T02:56:46.495Z","comments":true,"path":"api/articles/Python的进程、线程与协程.json","keywords":null,"cover":"https://images.unsplash.com/photo-1667423520863-8653106f18e7","content":"<h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><h4 id=\"进程-Process\"><a href=\"#进程-Process\" class=\"headerlink\" title=\"进程(Process)\"></a>进程(Process)</h4><p>进程是应用程序的启动实例，进程拥有代码和打开的文件资源、数据资源、独立的内存空间。</p>\n<h4 id=\"线程-Lightweight-Process，LWP\"><a href=\"#线程-Lightweight-Process，LWP\" class=\"headerlink\" title=\"线程(Lightweight Process，LWP)\"></a>线程(Lightweight Process，LWP)</h4><p>线程从属于进程，是程序的实际执行者，一个进程至少包含一个主线程，也可以有更多的子线程，线程拥有自己的栈空间。<br>对操作系统而言，线程是最小的执行单元，进程是最小的资源管理单元。无论是进程还是线程，都是由操作系统所管理的。</p>\n<h4 id=\"协程-Coroutines\"><a href=\"#协程-Coroutines\" class=\"headerlink\" title=\"协程(Coroutines)\"></a>协程(Coroutines)</h4><p>协程是一种比线程更加轻量级的存在，正如一个进程可以拥有多个线程一样，一个线程可以拥有多个协程。协程不是被操作系统内核所管理的，而是完全由程序所控制，也就是在用户态执行。这样带来的好处是性能大幅度的提升，因为不会像线程切换那样消耗资源。</p>\n<h4 id=\"进程、线程、协程的对比\"><a href=\"#进程、线程、协程的对比\" class=\"headerlink\" title=\"进程、线程、协程的对比:\"></a>进程、线程、协程的对比:</h4><p>(1)协程既不是进程也不是线程，协程仅仅是一个特殊的函数，协程它进程和进程不是一个维度的。</p>\n<p>(2)一个进程可以包含多个线程，一个线程可以包含多个协程。</p>\n<p>(3)一个线程内的多个协程虽然可以切换，但是多个协程是串行执行的，只能在一个线程内运行，没法利用CPU多核能力。</p>\n<p>(4)协程与进程、线程一样，切换是存在上下文切换问题的。</p>\n<h4 id=\"上下文切换对比：\"><a href=\"#上下文切换对比：\" class=\"headerlink\" title=\"上下文切换对比：\"></a>上下文切换对比：</h4><p>(1)进程的切换者是操作系统，切换时机是根据操作系统自己的切换策略，用户是无感知的。进程的切换内容包括页全局目录、内核栈、硬件上下文，切换内容保存在内存中。进程切换过程是由“用户态到内核态到用户态”的方式，切换效率低。</p>\n<p>(2)线程的切换者是操作系统，切换时机是根据操作系统自己的切换策略，用户是无感知的。线程的切换内容包括内核栈和硬件上下文,线程切换内容保存在内核栈中.线程切换过程是由“用户态到内核态到用户态”，切换效率中等。因为线程的调度是在内核态运行的，而线程中的代码是在用户态运行，因此线程切换会导致用户态与内核态的切换</p>\n<p>(4)协程的切换者是用户（编程者或应用程序），切换时机是用户自己的程序所决定的。协程的切换内容是硬件上下文，切换内存保存在用户自己的变量（用户栈或堆）中。协程的切换过程只有用户态，即没有陷入内核态，因此切换效率高。</p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><p><a href=\"https://blog.csdn.net/m0_47265341/article/details/126914736\">进程/线程/协程的区别_CoreDump1024的博客-CSDN博客_协程和线程和进程的区别</a></p>\n</li>\n<li><p><a href=\"https://zhuanlan.zhihu.com/p/445467379\">浅析Python的进程、线程与协程 - 知乎 (zhihu.com)</a></p>\n</li>\n</ul>\n","text":"基本概念进程(Process)进程是应用程序的启动实例，进程拥有代码和打开的文件资源、数据资源、独立的内存空间。 线程(Lightweight Process，LWP)线程从属于进程，是程序的实际执行者，一个进程至少包含一个主线程，也可以有更多的子线程，线程拥有自己的栈空间。对操...","link":"","photos":[],"count_time":{"symbolsCount":970,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Python面试题","slug":"Python面试题","count":2,"path":"api/tags/Python面试题.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">基本概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B-Process\"><span class=\"toc-text\">进程(Process)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BA%BF%E7%A8%8B-Lightweight-Process%EF%BC%8CLWP\"><span class=\"toc-text\">线程(Lightweight Process，LWP)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%8F%E7%A8%8B-Coroutines\"><span class=\"toc-text\">协程(Coroutines)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E3%80%81%E7%BA%BF%E7%A8%8B%E3%80%81%E5%8D%8F%E7%A8%8B%E7%9A%84%E5%AF%B9%E6%AF%94\"><span class=\"toc-text\">进程、线程、协程的对比:</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2%E5%AF%B9%E6%AF%94%EF%BC%9A\"><span class=\"toc-text\">上下文切换对比：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">参考文章</span></a></li></ol>","author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"tornado与WSGI","uid":"3b753055d13139b2c102cd8c0aeddadf","slug":"tornado与WSGI","date":"2022-12-10T03:00:35.000Z","updated":"2022-12-10T03:12:53.287Z","comments":true,"path":"api/articles/tornado与WSGI.json","keywords":null,"cover":"https://images.unsplash.com/photo-1667101011264-7b8a403c4d7b","text":"简介tornado是由F打头的404网站收购并且开源出来的Web框架, 他的第一个特点奏是将HTTP服务器和Web应用整合到了一起. 所以可以用tornado搭建出来的服务器模型如下 这就是我们刚才说的接受请求, 处理请求, 返回请求都是一个人, 感觉也不错. 但是请注意了, 虽...","link":"","photos":[],"count_time":{"symbolsCount":723,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":7,"path":"api/categories/Python面试题.json"}],"tags":[],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"ModelFirst与DBFirst","uid":"16a21e0bb1a0e0b088f32d8aa8cd1960","slug":"ModelFirst-DBFirst区别？","date":"2022-12-10T02:43:08.000Z","updated":"2022-12-10T02:53:15.715Z","comments":true,"path":"api/articles/ModelFirst-DBFirst区别？.json","keywords":null,"cover":"https://images.unsplash.com/photo-1669092160303-1e79fdff702d","text":" EF（Entity Framework（实体框架））是微软出品的用来操作数据库的一个框架。 EF 的三种设计模型：CodeFirst，ModelFirst，DBFirst。**ModelFirst 是首先设计实体模型，之后根据实体模型实现到数据库的映射。DBFirst **是先...","link":"","photos":[],"count_time":{"symbolsCount":362,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":7,"path":"api/categories/Python面试题.json"}],"tags":[],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}}}