{"title":"剑指Offer-58：左旋转字符串","uid":"d120205b1f477546bf54dd888da16412","slug":"Algorithm/剑指Offer-58：左旋转字符串","date":"2022-12-19T09:42:27.000Z","updated":"2022-12-19T09:48:01.559Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-58：左旋转字符串.json","keywords":null,"cover":"https://images.unsplash.com/photo-1671400833073-0a066e059f44","content":"<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><p>字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部。请定义一个函数实现字符串左旋转操作的功能。比如，输入字符串”abcdefg”和数字2，该函数将返回左旋转两位得到的结果”cdefgab”。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 示例</span>\n输入<span class=\"token punctuation\">:</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"abcdefg\"</span><span class=\"token punctuation\">,</span> k <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n输出<span class=\"token punctuation\">:</span> <span class=\"token string\">\"cdefgab\"</span>\n\n输入<span class=\"token punctuation\">:</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"lrloseumgh\"</span><span class=\"token punctuation\">,</span> k <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\n输出<span class=\"token punctuation\">:</span> <span class=\"token string\">\"umghlrlose\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"方法：列表遍历拼接\"><a href=\"#方法：列表遍历拼接\" class=\"headerlink\" title=\"方法：列表遍历拼接\"></a>方法：列表遍历拼接</h3><ul>\n<li>新建一个 list(Python)、StringBuilder(Java) ，记为 resresres ；</li>\n<li>先向 resresres 添加 “第 n+1n + 1n+1 位至末位的字符” ；</li>\n<li>再向 resresres 添加 “首位至第 nnn 位的字符” ；</li>\n<li>将 resresres 转化为字符串并返回。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">reverseLeftWords</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n        res <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> n <span class=\"token operator\">+</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            res<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i <span class=\"token operator\">%</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 利用取余操作在遍历(n, len(s))后开始遍历(0, n)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"复杂度分析\"><a href=\"#复杂度分析\" class=\"headerlink\" title=\"复杂度分析\"></a>复杂度分析</h3><ul>\n<li>时间复杂度 <em>O(N)</em> ： 线性遍历 <code>s</code> 并添加，使用线性时间；</li>\n<li>空间复杂度 O(N) ： 假设循环过程中内存会被及时回收，内存中至少同时存在长度为 <code>N</code> 和 <code>N−1</code> 的两个字符串（新建长度为 <code>N</code> 的 <code>res</code> 需要使用前一个长度 <code>N−1</code> 的 <code>res</code>），因此至少使用 <em>O(N)</em> 的额外空间。</li>\n</ul>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"https://leetcode.cn/problems/zuo-xuan-zhuan-zi-fu-chuan-lcof/solutions/196453/mian-shi-ti-58-ii-zuo-xuan-zhuan-zi-fu-chuan-qie-p/\">剑指 Offer 58 - II. 左旋转字符串 - 力扣（Leetcode）</a></li>\n</ul>\n","text":"问题字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部。请定义一个函数实现字符串左旋转操作的功能。比如，输入字符串”abcdefg”和数字2，该函数将返回左旋转两位得到的结果”cdefgab”。 # 示例 输入: s = \"abcdefg\", k = 2 输出: \"c...","link":"","photos":[],"count_time":{"symbolsCount":782,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":7,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":7,"path":"api/tags/Leetcode.json"},{"name":"栈","slug":"栈","count":2,"path":"api/tags/栈.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%EF%BC%9A%E5%88%97%E8%A1%A8%E9%81%8D%E5%8E%86%E6%8B%BC%E6%8E%A5\"><span class=\"toc-text\">方法：列表遍历拼接</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90\"><span class=\"toc-text\">复杂度分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"剑指Offer-03：数组中重复的数字","uid":"3fe101fb1734d9c72d92c2b5009ac91d","slug":"Algorithm/剑指Offer-03：数组中重复的数字","date":"2022-12-19T12:43:17.000Z","updated":"2022-12-19T12:58:02.167Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-03：数组中重复的数字.json","keywords":null,"cover":"https://images.unsplash.com/photo-1670968982569-81f78c8e841d","text":"问题剑指 Offer 03. 数组中重复的数字 - 力扣（Leetcode） 在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。 # 示例 输入...","link":"","photos":[],"count_time":{"symbolsCount":983,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":7,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":7,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":3,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"剑指Offer-24：反转链表","uid":"2c2b58e191552fd1e9252d2bfed9bbd7","slug":"Algorithm/剑指Offer-24：反转链表","date":"2022-12-19T08:56:24.000Z","updated":"2022-12-19T09:00:22.802Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-24：反转链表.json","keywords":null,"cover":"https://images.unsplash.com/photo-1668076120526-41f1e4e20214","text":"问题剑指 Offer 24. 反转链表 - 力扣（Leetcode） 定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。 # 示例 输入: 1->2->3->4->5->NULL 输出: 5->4->3->2->1->NULL 方法：temp暂存考虑遍历链表...","link":"","photos":[],"count_time":{"symbolsCount":726,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"链表","slug":"链表","count":2,"path":"api/tags/链表.json"},{"name":"Algorithm","slug":"Algorithm","count":7,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":7,"path":"api/tags/Leetcode.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}}}