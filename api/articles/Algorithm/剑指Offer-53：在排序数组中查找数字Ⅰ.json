{"title":"剑指Offer-53：在排序数组中查找数字Ⅰ","uid":"3cee89fc7f0377ee282368965138239f","slug":"Algorithm/剑指Offer-53：在排序数组中查找数字Ⅰ","date":"2022-12-19T13:10:48.000Z","updated":"2022-12-19T13:34:58.861Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-53：在排序数组中查找数字Ⅰ.json","keywords":null,"cover":"https://images.unsplash.com/photo-1670515258571-29149b266666","content":"<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><p><a href=\"https://leetcode.cn/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/description/\">剑指 Offer 53 - I. 在排序数组中查找数字 I - 力扣（Leetcode）</a></p>\n<p>统计一个数字在排序数组中出现的次数。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 示例</span>\n输入<span class=\"token punctuation\">:</span> nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> target <span class=\"token operator\">=</span> <span class=\"token number\">8</span>\n输出<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n\n输入<span class=\"token punctuation\">:</span> nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> target <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\n输出<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"方法：二分法\"><a href=\"#方法：二分法\" class=\"headerlink\" title=\"方法：二分法\"></a>方法：二分法</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>有序数组中的搜索问题，首先想到 <strong>二分法</strong> 解决。</p></blockquote>\n<p>由于这是一个有序数组并且数组 <code>nums</code> 中元素都为整数，因此可以分别二分查找 <code>target</code> 和 <code>target−1</code> 的右边界，将两结果相减并返回即可。本质上看， <code>helper()</code> 函数旨在查找数字 <code>tar</code> 在数组 <code>nums</code> 中的 插入点 ，且若数组中存在值相同的元素，则插入到这些元素的右边。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">def</span> <span class=\"token function\">helper</span><span class=\"token punctuation\">(</span>tar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            l<span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">while</span> l <span class=\"token operator\">&lt;=</span> r<span class=\"token punctuation\">:</span>\n                m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">+</span> r<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n                <span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> tar<span class=\"token punctuation\">:</span> l <span class=\"token operator\">=</span> m <span class=\"token operator\">+</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># 缩小边界，直到 l=r。</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> r <span class=\"token operator\">=</span> m <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n            <span class=\"token keyword\">return</span> l\n        <span class=\"token keyword\">return</span> helper<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> helper<span class=\"token punctuation\">(</span>target <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"复杂度分析\"><a href=\"#复杂度分析\" class=\"headerlink\" title=\"复杂度分析\"></a>复杂度分析</h3><ul>\n<li>时间复杂度 <code>O(logN)</code> ： 二分法为对数级别复杂度。</li>\n<li>空间复杂度 <code>O(1)</code>： 几个变量使用常数大小的额外空间。</li>\n</ul>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"https://leetcode.cn/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/solutions/155893/mian-shi-ti-53-i-zai-pai-xu-shu-zu-zhong-cha-zha-5/?languageTags=python3\">剑指 Offer 53 - I. 在排序数组中查找数字 I - 力扣（Leetcode）</a></li>\n</ul>\n","feature":true,"text":"问题剑指 Offer 53 - I. 在排序数组中查找数字 I - 力扣（Leetcode） 统计一个数字在排序数组中出现的次数。 # 示例 输入: nums = [5,7,7,8,8,10], target = 8 输出: 2 输入: nums = [5,7,7,8,8,10]...","link":"","photos":[],"count_time":{"symbolsCount":827,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":7,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":7,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":3,"path":"api/tags/查找算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%EF%BC%9A%E4%BA%8C%E5%88%86%E6%B3%95\"><span class=\"toc-text\">方法：二分法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90\"><span class=\"toc-text\">复杂度分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"剑指Offer-53：0~n中缺失的数字","uid":"7cc307c78d4102bf1aeeccbd33b5d357","slug":"Algorithm/剑指Offer-53：0-n中缺失的数字","date":"2022-12-19T13:26:25.000Z","updated":"2022-12-19T13:34:41.507Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-53：0-n中缺失的数字.json","keywords":null,"cover":"https://images.unsplash.com/photo-1657444984080-5c08464bde8c","text":"问题剑指 Offer 53 - II. 0～n-1中缺失的数字 - 力扣（Leetcode） 一个长度为n-1的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围0～n-1之内。在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，请找出这个数字。 # 示例 输入: ...","link":"","photos":[],"count_time":{"symbolsCount":724,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":7,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":7,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":3,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"剑指Offer-03：数组中重复的数字","uid":"3fe101fb1734d9c72d92c2b5009ac91d","slug":"Algorithm/剑指Offer-03：数组中重复的数字","date":"2022-12-19T12:43:17.000Z","updated":"2022-12-19T12:58:02.167Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-03：数组中重复的数字.json","keywords":null,"cover":"https://images.unsplash.com/photo-1670968982569-81f78c8e841d","text":"问题剑指 Offer 03. 数组中重复的数字 - 力扣（Leetcode） 在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。 # 示例 输入...","link":"","photos":[],"count_time":{"symbolsCount":983,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":7,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":7,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":3,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true}}