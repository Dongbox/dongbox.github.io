{"title":"剑指Offer-53：0~n中缺失的数字","uid":"7cc307c78d4102bf1aeeccbd33b5d357","slug":"Algorithm/剑指Offer-53：0-n中缺失的数字","date":"2022-12-19T13:26:25.000Z","updated":"2022-12-19T13:34:41.507Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-53：0-n中缺失的数字.json","keywords":null,"cover":"https://images.unsplash.com/photo-1657444984080-5c08464bde8c","content":"<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><p><a href=\"https://leetcode.cn/problems/que-shi-de-shu-zi-lcof/description/?envType=study-plan&id=lcof&plan=lcof&plan_progress=y8llrks\">剑指 Offer 53 - II. 0～n-1中缺失的数字 - 力扣（Leetcode）</a></p>\n<p>一个长度为n-1的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围0～n-1之内。在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，请找出这个数字。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 示例</span>\n输入<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n输出<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>\n\n输入<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\n输出<span class=\"token punctuation\">:</span> <span class=\"token number\">8</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"方法：二分法\"><a href=\"#方法：二分法\" class=\"headerlink\" title=\"方法：二分法\"></a>方法：二分法</h3><p>根据题意，数组可以按照以下规则划分为两部分。</p>\n<ul>\n<li>左子数组： <code>nums[i]=i</code>；</li>\n<li>右子数组： <code>nums[i]≠i</code></li>\n</ul>\n<p>缺失的数字等于 <strong>“右子数组的首位元素”</strong> 对应的索引；因此考虑使用二分法查找 “右子数组的首位元素” 。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">missingNumber</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        l<span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">while</span> l <span class=\"token operator\">&lt;=</span> r<span class=\"token punctuation\">:</span>\n            m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">+</span> r<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n            <span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> m<span class=\"token punctuation\">:</span> l <span class=\"token operator\">=</span> m <span class=\"token operator\">+</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># “右子数组的首位元素” 一定在闭区间 [m+1,j] 中。</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> r <span class=\"token operator\">=</span> m <span class=\"token operator\">-</span> <span class=\"token number\">1</span>  <span class=\"token comment\"># ”左子数组的末位元素” 一定在闭区间 [i,m−1]中。</span>\n        <span class=\"token keyword\">return</span> l<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"复杂度分析\"><a href=\"#复杂度分析\" class=\"headerlink\" title=\"复杂度分析\"></a>复杂度分析</h3><ul>\n<li>时间复杂度 *O(logN)*： 二分法为对数级别复杂度。</li>\n<li>空间复杂度 *O(1)*： 几个变量使用常数大小的额外空间。</li>\n</ul>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"https://leetcode.cn/problems/que-shi-de-shu-zi-lcof/solutions/155915/mian-shi-ti-53-ii-0n-1zhong-que-shi-de-shu-zi-er-f/?languageTags=python3\">剑指 Offer 53 - II. 0～n-1中缺失的数字 - 力扣（Leetcode）</a></li>\n</ul>\n","feature":true,"text":"问题剑指 Offer 53 - II. 0～n-1中缺失的数字 - 力扣（Leetcode） 一个长度为n-1的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围0～n-1之内。在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，请找出这个数字。 # 示例 输入: ...","link":"","photos":[],"count_time":{"symbolsCount":724,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":7,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":7,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":3,"path":"api/tags/查找算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%EF%BC%9A%E4%BA%8C%E5%88%86%E6%B3%95\"><span class=\"toc-text\">方法：二分法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90\"><span class=\"toc-text\">复杂度分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"剑指Offer-53：在排序数组中查找数字Ⅰ","uid":"3cee89fc7f0377ee282368965138239f","slug":"Algorithm/剑指Offer-53：在排序数组中查找数字Ⅰ","date":"2022-12-19T13:10:48.000Z","updated":"2022-12-19T13:34:58.861Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-53：在排序数组中查找数字Ⅰ.json","keywords":null,"cover":"https://images.unsplash.com/photo-1670515258571-29149b266666","text":"问题剑指 Offer 53 - I. 在排序数组中查找数字 I - 力扣（Leetcode） 统计一个数字在排序数组中出现的次数。 # 示例 输入: nums = [5,7,7,8,8,10], target = 8 输出: 2 输入: nums = [5,7,7,8,8,10]...","link":"","photos":[],"count_time":{"symbolsCount":827,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":7,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":7,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":3,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true}}