{"title":"剑指Offer-50：第一个只出现一次的字符","uid":"ef0e61ba16f1206782943e43e246e0a2","slug":"Algorithm/剑指Offer-50：第一个只出现一次的字符","date":"2022-12-20T02:58:47.000Z","updated":"2022-12-20T03:10:24.765Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-50：第一个只出现一次的字符.json","keywords":null,"cover":"https://images.unsplash.com/photo-1671243396019-a47f031d20e9","content":"<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><p><a href=\"https://leetcode.cn/problems/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof/description/?envType=study-plan&id=lcof&plan=lcof&plan_progress=y8llrks\">剑指 Offer 50. 第一个只出现一次的字符 - 力扣（Leetcode）</a></p>\n<p>在字符串 s 中找出第一个只出现一次的字符。如果没有，返回一个单空格。 s 只包含小写字母。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># 示例</span>\n输入：s <span class=\"token operator\">=</span> <span class=\"token string\">\"abaccdeff\"</span>\n输出：<span class=\"token string\">'b'</span>\n\n输入：s <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span> \n输出：<span class=\"token string\">' '</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"方法：-哈希表\"><a href=\"#方法：-哈希表\" class=\"headerlink\" title=\"方法： 哈希表\"></a>方法： 哈希表</h3><ol>\n<li>遍历字符串 <code>s</code> ，使用哈希表统计 “各字符数量是否 &gt;1”。</li>\n<li>再遍历字符串 <code>s</code> ，在哈希表中找到首个 “数量为 1 的字符”，并返回。</li>\n</ol>\n<p><img src=\"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/image-20221220110036658.png\" alt=\"image-20221220110036658\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">firstUniqChar</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">:</span>\n        dic <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>OrderedDict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span>\n            dic<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">not</span> c <span class=\"token keyword\">in</span> dic  <span class=\"token comment\"># c in dic 为判断字典中是否含有键 c。</span>\n        <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> dic<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 遍历拿出第一个</span>\n            <span class=\"token keyword\">if</span> v<span class=\"token punctuation\">:</span> <span class=\"token keyword\">return</span> k\n        <span class=\"token keyword\">return</span> <span class=\"token string\">' '</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h3 id=\"复杂度分析\"><a href=\"#复杂度分析\" class=\"headerlink\" title=\"复杂度分析\"></a>复杂度分析</h3><p>时间复杂度 <em>O(N)</em> ： N 为字符串 <code>s</code> 的长度；需遍历 <code>s</code> 两轮，使用 <em>O(N)</em> ；HashMap 查找操作的复杂度为 *O(1)*；<br>空间复杂度 *O(1)*： 由于题目指出 <code>s</code> 只包含小写字母，因此最多有 26 个不同字符，HashMap 存储需占用 <em>O(26)=O(1)</em> 的额外空间。</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"https://leetcode.cn/problems/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof/solutions/159489/mian-shi-ti-50-di-yi-ge-zhi-chu-xian-yi-ci-de-zi-3/\">剑指 Offer 50. 第一个只出现一次的字符 - 力扣（Leetcode）</a></li>\n</ul>\n","feature":true,"text":"问题剑指 Offer 50. 第一个只出现一次的字符 - 力扣（Leetcode） 在字符串 s 中找出第一个只出现一次的字符。如果没有，返回一个单空格。 s 只包含小写字母。 # 示例 输入：s = \"abaccdeff\" 输出：'b' 输入：s = \"\" 输出：' ' 方法：...","link":"","photos":[],"count_time":{"symbolsCount":691,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"链表","slug":"链表","count":3,"path":"api/tags/链表.json"},{"name":"Algorithm","slug":"Algorithm","count":10,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":10,"path":"api/tags/Leetcode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%EF%BC%9A-%E5%93%88%E5%B8%8C%E8%A1%A8\"><span class=\"toc-text\">方法： 哈希表</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90\"><span class=\"toc-text\">复杂度分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"剑指Offer-11：旋转数组的最小数字","uid":"90b1ec3d38561ac8554926b985f123c0","slug":"Algorithm/剑指Offer-11：旋转数组的最小数字","date":"2022-12-20T02:33:53.000Z","updated":"2022-12-20T02:46:35.223Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-11：旋转数组的最小数字.json","keywords":null,"cover":"https://images.unsplash.com/photo-1671479754018-9fbcb053d608","text":"问题剑指 Offer 11. 旋转数组的最小数字 - 力扣（Leetcode） 把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 给你一个可能存在 重复 元素值的数组 numbers ，它原来是一个升序排列的数组，并按上述情形进行了一次旋转。请返回旋转数组的最小...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":10,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":10,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":5,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true}}