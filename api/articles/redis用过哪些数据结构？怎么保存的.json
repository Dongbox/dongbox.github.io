{"title":"redis用过哪些数据结构？怎么保存的?","uid":"06c05b6d3f59577fc268e145e3219741","slug":"redis用过哪些数据结构？怎么保存的","date":"2022-12-09T12:15:37.000Z","updated":"2022-12-10T02:53:40.000Z","comments":true,"path":"api/articles/redis用过哪些数据结构？怎么保存的.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666126444655-23492b1532e2","content":"<h3 id=\"Redis-的五种基本数据类型\"><a href=\"#Redis-的五种基本数据类型\" class=\"headerlink\" title=\"Redis 的五种基本数据类型\"></a>Redis 的五种基本数据类型</h3><h4 id=\"String（字符串）\"><a href=\"#String（字符串）\" class=\"headerlink\" title=\"String（字符串）\"></a>String（字符串）</h4><p>简介:String是Redis最基础的数据结构类型，它是二进制安全的，可以存储图片或者序列化的对象，值最大存储为512M</p>\n<p>简单使用举例: set key value、get key等</p>\n<p>应用场景：共享session、分布式锁，计数器、限流。</p>\n<p>内部编码有3种，int（8字节长整型）/embstr（小于等于39字节字符串）/raw（大于39个字节字符串）</p>\n<h4 id=\"Hash（哈希）\"><a href=\"#Hash（哈希）\" class=\"headerlink\" title=\"Hash（哈希）\"></a>Hash（哈希）</h4><p>简介：在Redis中，哈希类型是指v（值）本身又是一个键值对（k-v）结构</p>\n<p>简单使用举例：hset key field value 、hget key field</p>\n<p>内部编码：ziplist（压缩列表） 、hashtable（哈希表）</p>\n<p>应用场景：缓存用户信息等。</p>\n<h4 id=\"List（列表）\"><a href=\"#List（列表）\" class=\"headerlink\" title=\"List（列表）\"></a>List（列表）</h4><p>简介：列表（list）类型是用来存储多个有序的字符串，一个列表最多可以存储2^32-1个元素。</p>\n<p>简单实用举例：lpush key value [value …] 、lrange key start end</p>\n<p>内部编码：ziplist（压缩列表）、linkedlist（链表）</p>\n<p>应用场景：消息队列，文章列表</p>\n<h4 id=\"Set（集合）\"><a href=\"#Set（集合）\" class=\"headerlink\" title=\"Set（集合）\"></a>Set（集合）</h4><p>简介：集合（set）类型也是用来保存多个的字符串元素，但是不允许重复元素</p>\n<p>简单使用举例：sadd key element [element …]、smembers key</p>\n<p>内部编码：intset（整数集合）、hashtable（哈希表）</p>\n<p>应用场景：用户标签,生成随机数抽奖、社交需求。</p>\n<h4 id=\"有序集合（zset）\"><a href=\"#有序集合（zset）\" class=\"headerlink\" title=\"有序集合（zset）\"></a>有序集合（zset）</h4><p>简介：已排序的字符串集合，同时元素不能重复</p>\n<p>简单格式举例：zadd key score member [score member …]，zrank key member</p>\n<p>底层内部编码：ziplist（压缩列表）、skiplist（跳跃表）</p>\n<p>应用场景：排行榜，社交需求（如用户点赞）。</p>\n<h4 id=\"Redis-的三种特殊数据类型\"><a href=\"#Redis-的三种特殊数据类型\" class=\"headerlink\" title=\"Redis 的三种特殊数据类型\"></a>Redis 的三种特殊数据类型</h4><ul>\n<li><p>Geo：Redis3.2推出的，地理位置定位，用于存储地理位置信息，并对存储的信息进行操作。</p>\n</li>\n<li><p>HyperLogLog：用来做基数统计算法的数据结构，如统计网站的UV。</p>\n</li>\n<li><p>Bitmaps ：用一个比特位来映射某个元素的状态，在Redis中，它的底层是基于字符串类型实现的，可以把bitmaps成作一个以比特位为单位的数组</p>\n</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/5c1c1527bbc9954851162895ec3f47f2.png\" alt=\"5c1c1527bbc9954851162895ec3f47f2.png\"></p>\n<p>在redisObject中 **[type表示属于哪种数据类型，encoding表示该数据的存储方式]**，也就是底层的实现的该数据类型的数据结构，ptr则是指向数据的存储。</p>\n<p>encoding中的存储类型所表示的含义如下图所示：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/9ae120adbd08bc2393d0bd846714e4dd.png\"></p>\n<h3 id=\"数据的存储\"><a href=\"#数据的存储\" class=\"headerlink\" title=\"数据的存储\"></a>数据的存储</h3><p>String类型的数据结构存储方式有三种int、raw、embstr。</p>\n<p>Redis中规定假如存储的是 **[整数型值]<strong>，比如set num 123这样的类型，就会使用 int的存储方式进行存储，在redisObject的</strong>[ptr属性]**中就会保存该值。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/84880f95ccff808c1e172aa4f1718013.png\" alt=\"84880f95ccff808c1e172aa4f1718013.png\"></p>\n<h4 id=\"SDS\"><a href=\"#SDS\" class=\"headerlink\" title=\"SDS\"></a>SDS</h4><p>假如存储的**[字符串是一个字符串值并且长度大于32个字节]<strong>就会使用SDS(simple dynamic string)方式进行存储，并且encoding设置为raw；若是</strong>[字符串长度小于等于32个字节]**就会将encoding改为embstr来保存字符串。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/img_convert/1650938b53726c698463efc2a2d21414.png\" alt=\"1650938b53726c698463efc2a2d21414.png\"></p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ul>\n<li><p><a href=\"https://www.cnblogs.com/lidabo/p/16673547.html\">redis 超详细的Redis五种数据结构详解（理论+实战） - DoubleLi - 博客园 (cnblogs.com)</a></p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/u012868901/article/details/122926726\">每日一问：Redis有几种数据结构,底层分别是怎么存储的？_星仔学习的博客-CSDN博客</a></p>\n</li>\n<li><p><a href=\"https://zhuanlan.zhihu.com/p/467043930\">Redis源码解析之SDS（缓存面试加分项） - 知乎 (zhihu.com)</a></p>\n</li>\n</ul>\n","text":"Redis 的五种基本数据类型String（字符串）简介:String是Redis最基础的数据结构类型，它是二进制安全的，可以存储图片或者序列化的对象，值最大存储为512M 简单使用举例: set key value、get key等 应用场景：共享session、分布式锁，计数...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":9,"path":"api/categories/Python面试题.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Redis-%E7%9A%84%E4%BA%94%E7%A7%8D%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">Redis 的五种基本数据类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#String%EF%BC%88%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%89\"><span class=\"toc-text\">String（字符串）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Hash%EF%BC%88%E5%93%88%E5%B8%8C%EF%BC%89\"><span class=\"toc-text\">Hash（哈希）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#List%EF%BC%88%E5%88%97%E8%A1%A8%EF%BC%89\"><span class=\"toc-text\">List（列表）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Set%EF%BC%88%E9%9B%86%E5%90%88%EF%BC%89\"><span class=\"toc-text\">Set（集合）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88%EF%BC%88zset%EF%BC%89\"><span class=\"toc-text\">有序集合（zset）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Redis-%E7%9A%84%E4%B8%89%E7%A7%8D%E7%89%B9%E6%AE%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">Redis 的三种特殊数据类型</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">数据的存储</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#SDS\"><span class=\"toc-text\">SDS</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">参考文章</span></a></li></ol>","author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"celery队列","uid":"867e4beaadd4d5a00bee5d31d8c3bbbf","slug":"celery队列","date":"2022-12-10T02:35:04.000Z","updated":"2022-12-10T04:20:20.067Z","comments":true,"path":"api/articles/celery队列.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666543257223-095dcc9a12fd","text":"Celery简介1. 什么是任务队列任务队列是一种用于在线程或计算机之间分配工作的机制。 任务队列的输入是一个称为任务的工作单元，有专门的职程（Worker）进行不断的监视任务队列，进行执行新的任务工作。 Celery 通过消息机制进行通信，通常使用中间件（Broker）作为客户...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":9,"path":"api/categories/Python面试题.json"}],"tags":[],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},"next_post":{"title":"简述一个前端请求的处理流程，uWSGI/nginx/django之间的处理流程","uid":"3850b7ec8b4d03677d6c891acbbc423d","slug":"简述一个前端请求的处理流程，uwsgi-nginx-django之间的处理流程","date":"2022-12-09T06:07:57.000Z","updated":"2022-12-10T02:53:23.361Z","comments":true,"path":"api/articles/简述一个前端请求的处理流程，uwsgi-nginx-django之间的处理流程.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666625628272-a1071f6f7173","text":"WSGI Web服务器网关接口（Python Web Server Gateway Interface，缩写为WSGI）是为Python语言定义的Web服务器和Web应用程序或框架之间的一种简单而通用的接口 参考文章 尝试理解Flask源码 之 搞懂WSGI协议 - 知乎 (zh...","link":"","photos":[],"count_time":{"symbolsCount":152,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":9,"path":"api/categories/Python面试题.json"}],"tags":[],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}}}