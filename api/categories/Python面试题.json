{"name":"Python面试题","slug":"Python面试题","count":14,"postlist":[{"title":"ModelFirst与DBFirst","uid":"16a21e0bb1a0e0b088f32d8aa8cd1960","slug":"ModelFirst-DBFirst区别？","date":"2022-12-10T02:43:08.000Z","updated":"2022-12-10T02:53:15.715Z","comments":true,"path":"api/articles/ModelFirst-DBFirst区别？.json","keywords":null,"cover":"https://images.unsplash.com/photo-1669092160303-1e79fdff702d","text":" EF（Entity Framework（实体框架））是微软出品的用来操作数据库的一个框架。 EF 的三种设计模型：CodeFirst，ModelFirst，DBFirst。**ModelFirst 是首先设计实体模型，之后根据实体模型实现到数据库的映射。DBFirst **是先...","link":"","photos":[],"count_time":{"symbolsCount":362,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"redis用过哪些数据结构？怎么保存的?","uid":"06c05b6d3f59577fc268e145e3219741","slug":"redis用过哪些数据结构？怎么保存的","date":"2022-12-09T12:15:37.000Z","updated":"2022-12-10T02:53:40.000Z","comments":true,"path":"api/articles/redis用过哪些数据结构？怎么保存的.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666126444655-23492b1532e2","text":"Redis 的五种基本数据类型String（字符串）简介:String是Redis最基础的数据结构类型，它是二进制安全的，可以存储图片或者序列化的对象，值最大存储为512M 简单使用举例: set key value、get key等 应用场景：共享session、分布式锁，计数...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"向量化–one-hot编码/数据分箱","uid":"012543d9b947c1da60945007fb97dc9c","slug":"向量化–one-hot编码-数据分箱","date":"2022-12-10T03:12:32.000Z","updated":"2022-12-10T12:53:21.485Z","comments":true,"path":"api/articles/向量化–one-hot编码-数据分箱.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666899388931-cb2a70cff398","text":"为什么使用One-Hot编码？对于机器学习任务中，特征并不总是连续值，很多是分类值。这些分类值本身没有大小的意义。为了将数据集中一个分类变量替换为一个或多个新特征，我们使用One-Hot编码对数据进行预处理。 因为大部分算法是基于向量空间中的度量来进行计算的，为了使非偏序关系的变...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Feature Engineering","slug":"Feature-Engineering","count":1,"path":"api/tags/Feature-Engineering.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"数据结构：堆和栈","uid":"061f80859bc6d460d6ca6944c3b9b34e","slug":"数据结构：堆和栈","date":"2022-12-10T03:50:12.000Z","updated":"2022-12-10T12:54:08.996Z","comments":true,"path":"api/articles/数据结构：堆和栈.json","keywords":null,"cover":"https://images.unsplash.com/photo-1670188100630-650c52f61c2a","text":"什么是堆（一）堆的定义一个大小为 n 的堆（heap） 是一棵包含 n 个结点的 完全二叉树，其根节点称为堆顶，根据堆中亲自结点的大小关系，堆可以分为两类。（1）最小堆：如果树中每个结点的元素都小于或等于其孩子结点的元素，则称该堆为最小堆。在最小堆中，堆顶存储的元素是整棵树中最小...","link":"","photos":[],"count_time":{"symbolsCount":577,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":2,"path":"api/tags/Algorithm.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"深拷贝浅拷贝","uid":"698d6b72538462fa89b3c934a0b1d2e9","slug":"深拷贝浅拷贝","date":"2022-12-07T13:46:32.000Z","updated":"2022-12-09T02:03:00.649Z","comments":false,"path":"api/articles/深拷贝浅拷贝.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666625628272-a1071f6f7173","text":"1、Python 深拷贝和浅拷贝概念理解前提知识 Python 中对象包含的三个基本要素，分别是：id(身份标识)、type(数据类型)和value(值)。 is和 == 都是对对象进行比较判断作用的，但比较判断的内容并不相同： == 是python标准操作符中的比较操作符，用来...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Python","slug":"Python","count":8,"path":"api/tags/Python.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"简述一个前端请求的处理流程，uWSGI/nginx/django之间的处理流程","uid":"3850b7ec8b4d03677d6c891acbbc423d","slug":"简述一个前端请求的处理流程，uwsgi-nginx-django之间的处理流程","date":"2022-12-09T06:07:57.000Z","updated":"2022-12-10T12:55:05.887Z","comments":true,"path":"api/articles/简述一个前端请求的处理流程，uwsgi-nginx-django之间的处理流程.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666625628272-a1071f6f7173","text":"WSGI Web服务器网关接口（Python Web Server Gateway Interface，缩写为WSGI）是为Python语言定义的Web服务器和Web应用程序或框架之间的一种简单而通用的接口 参考文章 尝试理解Flask源码 之 搞懂WSGI协议 - 知乎 (zh...","link":"","photos":[],"count_time":{"symbolsCount":152,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Python","slug":"Python","count":8,"path":"api/tags/Python.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：Django中的CSRF问题","uid":"644c73fd2c19b0a9e69da32b079c908d","slug":"Python：Django中的CSRF问题","date":"2022-12-10T09:16:23.000Z","updated":"2022-12-10T12:52:05.449Z","comments":true,"path":"api/articles/Python：Django中的CSRF问题.json","keywords":null,"cover":"https://images.unsplash.com/photo-1661366050919-a14b46efee21","text":"CORS简介CORS是一种允许与托管在不同域上的资源进行交互的机制。例如，应用它的最常见场景之一是Ajax请求。 为了说明CORS是如何工作的，让我们假设您有一个位于domain.com中的web应用程序。但是，为了保存用户信息，应用程序调用部署在另一个url中的API，例如ap...","link":"","photos":[],"count_time":{"symbolsCount":689,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Python","slug":"Python","count":8,"path":"api/tags/Python.json"},{"name":"Django","slug":"Django","count":2,"path":"api/tags/Django.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true},{"title":"MYSQL优化与多表查询","uid":"44618c7f6520782d55b1b922f6fa7af4","slug":"MYSQL优化与多表查询","date":"2022-12-10T05:52:12.000Z","updated":"2022-12-10T12:50:53.522Z","comments":true,"path":"api/articles/MYSQL优化与多表查询.json","keywords":null,"cover":"https://images.unsplash.com/photo-1665512983234-5053c892365b","text":"参考文章 最全Mysql查询性能优化总结（超详细） - 知乎 (zhihu.com) 【MySQL笔记】多表查询（JOIN ON）_java小白。。的博客-CSDN博客_mysql join on ","link":"","photos":[],"count_time":{"symbolsCount":102,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Database","slug":"Database","count":1,"path":"api/tags/Database.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：Django模型类","uid":"8410d9c49c9d1e56959240bb5a60df1e","slug":"Python：Django模型类","date":"2022-12-10T08:17:36.000Z","updated":"2022-12-10T09:40:44.609Z","comments":true,"path":"api/articles/Python：Django模型类.json","keywords":null,"cover":"https://images.unsplash.com/photo-1658953229664-e8d5ebd039ba","text":"模型类继承一共有三种继承模式： 抽象基类 多表继承 代理模型 1. 抽象基类该模型将不会创建任何数据表。当其用作其它模型类的基类时，它的字段会自动添加至子类。 from django.db import models class CommonInfo(models.Model):...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Python","slug":"Python","count":8,"path":"api/tags/Python.json"},{"name":"Django","slug":"Django","count":2,"path":"api/tags/Django.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true},{"title":"Python：进程、线程与协程","uid":"47bf6e8451025e3a41bf23052e6c8743","slug":"Python：进程、线程与协程","date":"2022-12-10T02:54:10.000Z","updated":"2022-12-10T07:58:33.975Z","comments":true,"path":"api/articles/Python：进程、线程与协程.json","keywords":null,"cover":"https://images.unsplash.com/photo-1667423520863-8653106f18e7","text":"基本概念进程(Process)进程是应用程序的启动实例，进程拥有代码和打开的文件资源、数据资源、独立的内存空间。 线程(Lightweight Process，LWP)线程从属于进程，是程序的实际执行者，一个进程至少包含一个主线程，也可以有更多的子线程，线程拥有自己的栈空间。对操...","link":"","photos":[],"count_time":{"symbolsCount":970,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Python","slug":"Python","count":8,"path":"api/tags/Python.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：闭包","uid":"1e75bb07e5af1c2f8f74b87cd88f4fd3","slug":"Python：闭包","date":"2022-12-10T07:50:14.000Z","updated":"2022-12-10T08:18:25.669Z","comments":true,"path":"api/articles/Python：闭包.json","keywords":null,"cover":"https://images.unsplash.com/photo-1657212850528-c738d087e6f8","text":"简介在一些语言中，在函数中可以（嵌套）定义另一个函数时，如果内部的函数引用了外部的函数的变量，则可能产生闭包。闭包可以用来在一个函数与一组“私有”变量之间创建关联关系。在给定函数被多次调用的过程中，这些私有变量能够保持其持久性。 上面这段话实际上解释了闭包的一个定义和两个作用： ...","link":"","photos":[],"count_time":{"symbolsCount":967,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Python","slug":"Python","count":8,"path":"api/tags/Python.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true},{"title":"排序算法","uid":"557c3a65716469700d953ea750417d1a","slug":"排序算法","date":"2022-12-10T05:12:35.000Z","updated":"2022-12-10T12:54:54.795Z","comments":true,"path":"api/articles/排序算法.json","keywords":null,"cover":"https://images.unsplash.com/photo-1643142326340-7a4c55a09745","text":"归并排序算法思想 归并排序是一种递归算法，它持续地将一个列表分成两半。如果列表是空的或者 只有一个元素，那么根据定义，它就被排序好了（最基本的情况）。如果列表里的元素超过一个，我们就把列表拆分，然后分别对两个部分调用递归排序。一旦这两个部分被排序好了，然后就可以对这两部分数列进行...","link":"","photos":[],"count_time":{"symbolsCount":680,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Algorithm","slug":"Algorithm","count":2,"path":"api/tags/Algorithm.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：celery队列","uid":"79863d3505b89f135bc4e3895976782e","slug":"Python：celery队列","date":"2022-12-10T02:35:04.000Z","updated":"2022-12-10T12:51:54.736Z","comments":true,"path":"api/articles/Python：celery队列.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666543257223-095dcc9a12fd","text":"Celery简介1. 什么是任务队列任务队列是一种用于在线程或计算机之间分配工作的机制。 任务队列的输入是一个称为任务的工作单元，有专门的职程（Worker）进行不断的监视任务队列，进行执行新的任务工作。 Celery 通过消息机制进行通信，通常使用中间件（Broker）作为客户...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Python","slug":"Python","count":8,"path":"api/tags/Python.json"},{"name":"MQ","slug":"MQ","count":1,"path":"api/tags/MQ.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Tornado与WSGI","uid":"425ef74df346723b32c51d5af54d8ea2","slug":"Tornado与WSGI","date":"2022-12-10T03:00:35.000Z","updated":"2022-12-10T12:55:52.778Z","comments":true,"path":"api/articles/Tornado与WSGI.json","keywords":null,"cover":"https://images.unsplash.com/photo-1667101011264-7b8a403c4d7b","text":"简介tornado是由F打头的404网站收购并且开源出来的Web框架, 他的第一个特点奏是将HTTP服务器和Web应用整合到了一起. 所以可以用tornado搭建出来的服务器模型如下 这就是我们刚才说的接受请求, 处理请求, 返回请求都是一个人, 感觉也不错. 但是请注意了, 虽...","link":"","photos":[],"count_time":{"symbolsCount":723,"symbolsTime":"1 mins."},"categories":[{"name":"Python面试题","slug":"Python面试题","count":14,"path":"api/categories/Python面试题.json"}],"tags":[{"name":"Python","slug":"Python","count":8,"path":"api/tags/Python.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"准备开始，记录自己所有的操作吧!","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}}]}