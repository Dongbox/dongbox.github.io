{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}},"post_list":[{"title":"剑指Offer-50：第一个只出现一次的字符","uid":"ef0e61ba16f1206782943e43e246e0a2","slug":"Algorithm/剑指Offer-50：第一个只出现一次的字符","date":"2022-12-20T02:58:47.000Z","updated":"2022-12-20T03:10:24.765Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-50：第一个只出现一次的字符.json","keywords":null,"cover":"https://images.unsplash.com/photo-1671243396019-a47f031d20e9","text":"问题剑指 Offer 50. 第一个只出现一次的字符 - 力扣（Leetcode） 在字符串 s 中找出第一个只出现一次的字符。如果没有，返回一个单空格。 s 只包含小写字母。 # 示例 输入：s = \"abaccdeff\" 输出：'b' 输入：s = \"\" 输出：' ' 方法：...","link":"","photos":[],"count_time":{"symbolsCount":691,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"链表","slug":"链表","count":3,"path":"api/tags/链表.json"},{"name":"Algorithm","slug":"Algorithm","count":10,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":10,"path":"api/tags/Leetcode.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true},{"title":"剑指Offer-11：旋转数组的最小数字","uid":"90b1ec3d38561ac8554926b985f123c0","slug":"Algorithm/剑指Offer-11：旋转数组的最小数字","date":"2022-12-20T02:33:53.000Z","updated":"2022-12-20T02:46:35.223Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-11：旋转数组的最小数字.json","keywords":null,"cover":"https://images.unsplash.com/photo-1671479754018-9fbcb053d608","text":"问题剑指 Offer 11. 旋转数组的最小数字 - 力扣（Leetcode） 把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 给你一个可能存在 重复 元素值的数组 numbers ，它原来是一个升序排列的数组，并按上述情形进行了一次旋转。请返回旋转数组的最小...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":10,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":10,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":5,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true},{"title":"剑指Offer-04：二维数组中的查找","uid":"e5e2148adfe0122b920f670391f658d9","slug":"Algorithm/剑指Offer-04：二维数组中的查找","date":"2022-12-20T01:01:53.000Z","updated":"2022-12-20T01:07:45.820Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-04：二维数组中的查找.json","keywords":null,"cover":"https://images.unsplash.com/photo-1664877705363-984a353c0438","text":"问题剑指 Offer 04. 二维数组中的查找 - 力扣（Leetcode） 在一个 n * m 的二维数组中，每一行都按照从左到右 非递减 的顺序排序，每一列都按照从上到下 非递减 的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":10,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":10,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":5,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}},"feature":true},{"title":"剑指Offer-53：0~n中缺失的数字","uid":"7cc307c78d4102bf1aeeccbd33b5d357","slug":"Algorithm/剑指Offer-53：0-n中缺失的数字","date":"2022-12-19T13:26:25.000Z","updated":"2022-12-19T13:34:41.507Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-53：0-n中缺失的数字.json","keywords":null,"cover":"https://images.unsplash.com/photo-1657444984080-5c08464bde8c","text":"问题剑指 Offer 53 - II. 0～n-1中缺失的数字 - 力扣（Leetcode） 一个长度为n-1的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围0～n-1之内。在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，请找出这个数字。 # 示例 输入: ...","link":"","photos":[],"count_time":{"symbolsCount":724,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":10,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":10,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":5,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"剑指Offer-53：在排序数组中查找数字Ⅰ","uid":"3cee89fc7f0377ee282368965138239f","slug":"Algorithm/剑指Offer-53：在排序数组中查找数字Ⅰ","date":"2022-12-19T13:10:48.000Z","updated":"2022-12-19T13:34:58.861Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-53：在排序数组中查找数字Ⅰ.json","keywords":null,"cover":"https://images.unsplash.com/photo-1670515258571-29149b266666","text":"问题剑指 Offer 53 - I. 在排序数组中查找数字 I - 力扣（Leetcode） 统计一个数字在排序数组中出现的次数。 # 示例 输入: nums = [5,7,7,8,8,10], target = 8 输出: 2 输入: nums = [5,7,7,8,8,10]...","link":"","photos":[],"count_time":{"symbolsCount":827,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":10,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":10,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":5,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"剑指Offer-03：数组中重复的数字","uid":"3fe101fb1734d9c72d92c2b5009ac91d","slug":"Algorithm/剑指Offer-03：数组中重复的数字","date":"2022-12-19T12:43:17.000Z","updated":"2022-12-19T12:58:02.167Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-03：数组中重复的数字.json","keywords":null,"cover":"https://images.unsplash.com/photo-1670968982569-81f78c8e841d","text":"问题剑指 Offer 03. 数组中重复的数字 - 力扣（Leetcode） 在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。 # 示例 输入...","link":"","photos":[],"count_time":{"symbolsCount":983,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":10,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":10,"path":"api/tags/Leetcode.json"},{"name":"查找算法","slug":"查找算法","count":5,"path":"api/tags/查找算法.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"剑指Offer-58：左旋转字符串","uid":"d120205b1f477546bf54dd888da16412","slug":"Algorithm/剑指Offer-58：左旋转字符串","date":"2022-12-19T09:42:27.000Z","updated":"2022-12-19T09:48:01.559Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-58：左旋转字符串.json","keywords":null,"cover":"https://images.unsplash.com/photo-1671400833073-0a066e059f44","text":"问题字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部。请定义一个函数实现字符串左旋转操作的功能。比如，输入字符串”abcdefg”和数字2，该函数将返回左旋转两位得到的结果”cdefgab”。 # 示例 输入: s = \"abcdefg\", k = 2 输出: \"c...","link":"","photos":[],"count_time":{"symbolsCount":782,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":10,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":10,"path":"api/tags/Leetcode.json"},{"name":"栈","slug":"栈","count":2,"path":"api/tags/栈.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"剑指Offer-24：反转链表","uid":"2c2b58e191552fd1e9252d2bfed9bbd7","slug":"Algorithm/剑指Offer-24：反转链表","date":"2022-12-19T08:56:24.000Z","updated":"2022-12-19T09:00:22.802Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-24：反转链表.json","keywords":null,"cover":"https://images.unsplash.com/photo-1668076120526-41f1e4e20214","text":"问题剑指 Offer 24. 反转链表 - 力扣（Leetcode） 定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。 # 示例 输入: 1->2->3->4->5->NULL 输出: 5->4->3->2->1->NULL 方法：temp暂存考虑遍历链表...","link":"","photos":[],"count_time":{"symbolsCount":726,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"链表","slug":"链表","count":3,"path":"api/tags/链表.json"},{"name":"Algorithm","slug":"Algorithm","count":10,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":10,"path":"api/tags/Leetcode.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"剑指Offer-06：从尾到头打印链表","uid":"c8c4451151af101d353c3e3bce84b1fa","slug":"Algorithm/剑指Offer-06：从尾到头打印链表","date":"2022-12-19T08:03:03.000Z","updated":"2022-12-19T08:24:41.532Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-06：从尾到头打印链表.json","keywords":null,"cover":null,"text":"问题剑指 Offer 06. 从尾到头打印链表 - 力扣（Leetcode） 输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。 # 示例 输入：head = [1,3,2] 输出：[2,3,1] 方法：辅助栈法算法流程： 入栈： 遍历链表，将各节点值 push...","link":"","photos":[],"count_time":{"symbolsCount":843,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"链表","slug":"链表","count":3,"path":"api/tags/链表.json"},{"name":"Algorithm","slug":"Algorithm","count":10,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":10,"path":"api/tags/Leetcode.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"剑指Offer-30：包含min函数的栈","uid":"cec078924c15a69261a840497da55575","slug":"Algorithm/剑指Offer-30：包含min函数的栈","date":"2022-12-19T06:07:01.000Z","updated":"2022-12-19T08:59:55.573Z","comments":true,"path":"api/articles/Algorithm/剑指Offer-30：包含min函数的栈.json","keywords":null,"cover":"https://images.unsplash.com/photo-1667747501985-40fa56e5cebc","text":"问题：剑指 Offer 30. 包含min函数的栈 - 力扣（Leetcode） 定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的 min 函数在该栈中，调用 min、push 及 pop 的时间复杂度都是 O(1)。 # 示例 MinStack minStack =...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Algorithm","slug":"Algorithm","count":10,"path":"api/tags/Algorithm.json"},{"name":"Leetcode","slug":"Leetcode","count":10,"path":"api/tags/Leetcode.json"},{"name":"栈","slug":"栈","count":2,"path":"api/tags/栈.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：进程和线程","uid":"02a08c5f44cac23b9de92edc205edce8","slug":"Python/Python：进程和线程","date":"2022-12-17T02:26:37.000Z","updated":"2022-12-17T03:03:52.816Z","comments":true,"path":"api/articles/Python/Python：进程和线程.json","keywords":null,"cover":"https://images.unsplash.com/photo-1671154453575-b0cea38bb19a","text":" 进程——资源分配的最小单位，线程——程序执行的最小单位 简介 进程（Process） 进程的目的就是担当分配系统资源（CPU时间、内存等）的基本单位。 线程（thread） 线程是进程的一个执行流，是CPU调度和分派的基本单位，它是比进程更小的能独立运行的基本单位。 进程有独立...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python: Django Model中的F&Q","uid":"f66713f2a78be6074d97eaab35246620","slug":"Python/Python：Django-Model中的F-Q","date":"2022-12-13T14:47:48.000Z","updated":"2022-12-13T14:55:08.080Z","comments":true,"path":"api/articles/Python/Python：Django-Model中的F-Q.json","keywords":null,"cover":"https://images.unsplash.com/photo-1669045236900-9988510e0e69","text":"关于FF作用：操作数据表中的某列值，也就是数据库中的某个字段，F()允许Django在未实际链接数据的情况下具有对数据库字段的值的引用，不用获取对象放在内存中再对字段进行操作，直接执行原生产sql语句操作 使用场景：对数据库中的所有的商品，在原价格的基础上涨价10元 from d...","link":"","photos":[],"count_time":{"symbolsCount":510,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"},{"name":"Django","slug":"Django","count":4,"path":"api/tags/Django.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"深入Python","uid":"48a973ff2817f5c6922953ec99a3d627","slug":"Python/深入Python","date":"2022-12-13T07:33:51.000Z","updated":"2022-12-20T03:07:42.016Z","comments":true,"path":"api/articles/Python/深入Python.json","keywords":null,"cover":"https://images.unsplash.com/photo-1669192532750-5165016ad000","text":"魔术方法 __init__ 为构建好的对象赋予初始化 __new__ 分配内存空间，并返回构建好的对象（地址） __del__ 从内存中清除对象，对象会默认执行方法。具体执行的时间节点 __call__ 当作函数执行时会被默认自动调用 __str__ 打印一个对象的时候，默认调用...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：Python2与Python3","uid":"c4c29a0f3ee5d4305d5533c1af569c42","slug":"Python/Python：Python2与Python3","date":"2022-12-10T13:20:33.000Z","updated":"2022-12-13T10:40:20.215Z","comments":true,"path":"api/articles/Python/Python：Python2与Python3.json","keywords":null,"cover":"https://images.unsplash.com/photo-1670258897358-1e0347859dab","text":" print() vs print Unicode vs ASCII 除法：浮点 vs 整数 StandardError废弃，统一使用Exception；raise去除raise IOError, &quot;&quot;格式，统一为raise IOError(&quot;fil...","link":"","photos":[],"count_time":{"symbolsCount":383,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：Django中的CSRF问题","uid":"644c73fd2c19b0a9e69da32b079c908d","slug":"Python/Python：Django中的CSRF问题","date":"2022-12-10T09:16:23.000Z","updated":"2022-12-13T10:40:15.645Z","comments":true,"path":"api/articles/Python/Python：Django中的CSRF问题.json","keywords":null,"cover":"https://images.unsplash.com/photo-1661366050919-a14b46efee21","text":"CORS简介CORS是一种允许与托管在不同域上的资源进行交互的机制。例如，应用它的最常见场景之一是Ajax请求。 为了说明CORS是如何工作的，让我们假设您有一个位于domain.com中的web应用程序。但是，为了保存用户信息，应用程序调用部署在另一个url中的API，例如ap...","link":"","photos":[],"count_time":{"symbolsCount":690,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"},{"name":"Django","slug":"Django","count":4,"path":"api/tags/Django.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：Django模型类","uid":"8410d9c49c9d1e56959240bb5a60df1e","slug":"Python/Python：Django模型类","date":"2022-12-10T08:17:36.000Z","updated":"2022-12-13T14:48:20.209Z","comments":true,"path":"api/articles/Python/Python：Django模型类.json","keywords":null,"cover":"https://images.unsplash.com/photo-1658953229664-e8d5ebd039ba","text":"ORM简介ORM，全称Object Relational MAPPing，中文叫做对象关系映射，通过ORM我们可以通过类的方式去操作数据库，而不用再写原生的SQL语句。通过把表映射成类，把行作实例，把字段作为属性，ORM在执行对象操作的时候最终还是会把对应的操作转换为数据库原生语...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"},{"name":"Django","slug":"Django","count":4,"path":"api/tags/Django.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：闭包","uid":"1e75bb07e5af1c2f8f74b87cd88f4fd3","slug":"Python/Python：闭包","date":"2022-12-10T07:50:14.000Z","updated":"2022-12-13T10:39:47.097Z","comments":true,"path":"api/articles/Python/Python：闭包.json","keywords":null,"cover":"https://images.unsplash.com/photo-1657212850528-c738d087e6f8","text":"简介在一些语言中，在函数中可以（嵌套）定义另一个函数时，如果内部的函数引用了外部的函数的变量，则可能产生闭包。闭包可以用来在一个函数与一组“私有”变量之间创建关联关系。在给定函数被多次调用的过程中，这些私有变量能够保持其持久性。 上面这段话实际上解释了闭包的一个定义和两个作用： ...","link":"","photos":[],"count_time":{"symbolsCount":967,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"MYSQL优化与多表查询","uid":"44618c7f6520782d55b1b922f6fa7af4","slug":"Database/MYSQL优化与多表查询","date":"2022-12-10T05:52:12.000Z","updated":"2022-12-13T14:53:11.799Z","comments":true,"path":"api/articles/Database/MYSQL优化与多表查询.json","keywords":null,"cover":"https://images.unsplash.com/photo-1665512983234-5053c892365b","text":"参考文章 最全Mysql查询性能优化总结（超详细） - 知乎 (zhihu.com) 【MySQL笔记】多表查询（JOIN ON）_java小白。。的博客-CSDN博客_mysql join on MySQL索引底层实现原理（B树和B+树）_BugMaker-shen的博客-CS...","link":"","photos":[],"count_time":{"symbolsCount":158,"symbolsTime":"1 mins."},"categories":[{"name":"Database","slug":"Database","count":3,"path":"api/categories/Database.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"排序算法","uid":"557c3a65716469700d953ea750417d1a","slug":"Algorithm/排序算法","date":"2022-12-10T05:12:35.000Z","updated":"2022-12-13T10:38:48.385Z","comments":true,"path":"api/articles/Algorithm/排序算法.json","keywords":null,"cover":"https://images.unsplash.com/photo-1643142326340-7a4c55a09745","text":"归并排序算法思想 归并排序是一种递归算法，它持续地将一个列表分成两半。如果列表是空的或者 只有一个元素，那么根据定义，它就被排序好了（最基本的情况）。如果列表里的元素超过一个，我们就把列表拆分，然后分别对两个部分调用递归排序。一旦这两个部分被排序好了，然后就可以对这两部分数列进行...","link":"","photos":[],"count_time":{"symbolsCount":680,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":2,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"数据结构：堆和栈","uid":"061f80859bc6d460d6ca6944c3b9b34e","slug":"Algorithm/数据结构：堆和栈","date":"2022-12-10T03:50:12.000Z","updated":"2022-12-13T10:39:12.339Z","comments":true,"path":"api/articles/Algorithm/数据结构：堆和栈.json","keywords":null,"cover":"https://images.unsplash.com/photo-1670188100630-650c52f61c2a","text":"什么是堆（一）堆的定义一个大小为 n 的堆（heap） 是一棵包含 n 个结点的 完全二叉树，其根节点称为堆顶，根据堆中亲自结点的大小关系，堆可以分为两类。（1）最小堆：如果树中每个结点的元素都小于或等于其孩子结点的元素，则称该堆为最小堆。在最小堆中，堆顶存储的元素是整棵树中最小...","link":"","photos":[],"count_time":{"symbolsCount":577,"symbolsTime":"1 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":2,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"向量化–one-hot编码/数据分箱","uid":"012543d9b947c1da60945007fb97dc9c","slug":"向量化–one-hot编码-数据分箱","date":"2022-12-10T03:12:32.000Z","updated":"2022-12-13T10:39:23.516Z","comments":true,"path":"api/articles/向量化–one-hot编码-数据分箱.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666899388931-cb2a70cff398","text":"为什么使用One-Hot编码？对于机器学习任务中，特征并不总是连续值，很多是分类值。这些分类值本身没有大小的意义。为了将数据集中一个分类变量替换为一个或多个新特征，我们使用One-Hot编码对数据进行预处理。 因为大部分算法是基于向量空间中的度量来进行计算的，为了使非偏序关系的变...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Feature Engineering","slug":"Feature-Engineering","count":1,"path":"api/categories/Feature-Engineering.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Tornado与WSGI","uid":"425ef74df346723b32c51d5af54d8ea2","slug":"Tornado与WSGI","date":"2022-12-10T03:00:35.000Z","updated":"2022-12-13T10:40:33.560Z","comments":true,"path":"api/articles/Tornado与WSGI.json","keywords":null,"cover":"https://images.unsplash.com/photo-1667101011264-7b8a403c4d7b","text":"简介tornado是由F打头的404网站收购并且开源出来的Web框架, 他的第一个特点奏是将HTTP服务器和Web应用整合到了一起. 所以可以用tornado搭建出来的服务器模型如下 这就是我们刚才说的接受请求, 处理请求, 返回请求都是一个人, 感觉也不错. 但是请注意了, 虽...","link":"","photos":[],"count_time":{"symbolsCount":723,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：进程、线程与协程","uid":"47bf6e8451025e3a41bf23052e6c8743","slug":"Python/Python：进程、线程与协程","date":"2022-12-10T02:54:10.000Z","updated":"2022-12-13T10:39:51.187Z","comments":true,"path":"api/articles/Python/Python：进程、线程与协程.json","keywords":null,"cover":"https://images.unsplash.com/photo-1667423520863-8653106f18e7","text":"基本概念进程(Process)进程是应用程序的启动实例，进程拥有代码和打开的文件资源、数据资源、独立的内存空间。 线程(Lightweight Process，LWP)线程从属于进程，是程序的实际执行者，一个进程至少包含一个主线程，也可以有更多的子线程，线程拥有自己的栈空间。对操...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"ModelFirst与DBFirst","uid":"16a21e0bb1a0e0b088f32d8aa8cd1960","slug":"ModelFirst-DBFirst区别？","date":"2022-12-10T02:43:08.000Z","updated":"2022-12-13T10:39:32.519Z","comments":true,"path":"api/articles/ModelFirst-DBFirst区别？.json","keywords":null,"cover":"https://images.unsplash.com/photo-1669092160303-1e79fdff702d","text":" EF（Entity Framework（实体框架））是微软出品的用来操作数据库的一个框架。 EF 的三种设计模型：CodeFirst，ModelFirst，DBFirst。ModelFirst是首先设计实体模型，之后根据实体模型实现到数据库的映射。DBFirst是先进行数据库的...","link":"","photos":[],"count_time":{"symbolsCount":356,"symbolsTime":"1 mins."},"categories":[{"name":"Database","slug":"Database","count":3,"path":"api/categories/Database.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：celery队列","uid":"79863d3505b89f135bc4e3895976782e","slug":"Python/Python：celery队列","date":"2022-12-10T02:35:04.000Z","updated":"2022-12-13T10:39:57.317Z","comments":true,"path":"api/articles/Python/Python：celery队列.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666543257223-095dcc9a12fd","text":"Celery简介1. 什么是任务队列任务队列是一种用于在线程或计算机之间分配工作的机制。 任务队列的输入是一个称为任务的工作单元，有专门的职程（Worker）进行不断的监视任务队列，进行执行新的任务工作。 Celery 通过消息机制进行通信，通常使用中间件（Broker）作为客户...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"},{"name":"MQ","slug":"MQ","count":1,"path":"api/tags/MQ.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"Python：redis，有哪些数据结构？怎么保存的?","uid":"ec7492543a6f387abaa8748f7f56ced2","slug":"Database/redis用过哪些数据结构？怎么保存的","date":"2022-12-09T12:15:37.000Z","updated":"2022-12-17T07:38:01.740Z","comments":true,"path":"api/articles/Database/redis用过哪些数据结构？怎么保存的.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666126444655-23492b1532e2","text":"Redis 的五种基本数据类型String（字符串）简介:String是Redis最基础的数据结构类型，它是二进制安全的，可以存储图片或者序列化的对象，值最大存储为512M 简单使用举例: set key value、get key等 应用场景：共享session、分布式锁，计数...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"Database","slug":"Database","count":3,"path":"api/categories/Database.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"简述一个前端请求的处理流程，uWSGI/nginx/django之间的处理流程","uid":"3850b7ec8b4d03677d6c891acbbc423d","slug":"简述一个前端请求的处理流程，uwsgi-nginx-django之间的处理流程","date":"2022-12-09T06:07:57.000Z","updated":"2022-12-13T10:38:23.526Z","comments":true,"path":"api/articles/简述一个前端请求的处理流程，uwsgi-nginx-django之间的处理流程.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666625628272-a1071f6f7173","text":"Nginx 资源缓存 负载均衡 方向代理 缓存请求 提高并发 WSGIWeb服务器网关接口（Python Web Server Gateway Interface，缩写为WSGI）是为Python语言定义的Web服务器和Web应用程序或框架之间的一种简单而通用的接口 Django...","link":"","photos":[],"count_time":{"symbolsCount":802,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"},{"name":"HTTP","slug":"HTTP","count":1,"path":"api/tags/HTTP.json"},{"name":"Django","slug":"Django","count":4,"path":"api/tags/Django.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"我的Hexo开发指南","uid":"9a515d5665a08874b409b4ff5ca7a5ad","slug":"我的Hexo开发指南","date":"2022-12-09T02:10:33.000Z","updated":"2022-12-10T02:34:00.773Z","comments":true,"path":"api/articles/我的Hexo开发指南.json","keywords":null,"cover":"https://images.unsplash.com/photo-1670401781625-9eac9c7aaab2","text":"简介作为一个Hexo小白，现在我想要拥有一个Hexo的Aurora主题的博客网站，同时我还有一个域名（dongbox.space），我想通过这个域名访问到我的Hexo静态资源，但我没有服务器，所以我打算直接部署在pages服务上，我选择了Github Pages，整个部署过程会分...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Hexo","slug":"Hexo","count":1,"path":"api/tags/Hexo.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}},{"title":"深拷贝浅拷贝","uid":"698d6b72538462fa89b3c934a0b1d2e9","slug":"Python/深拷贝浅拷贝","date":"2022-12-07T13:46:32.000Z","updated":"2022-12-19T05:38:25.366Z","comments":false,"path":"api/articles/Python/深拷贝浅拷贝.json","keywords":null,"cover":"https://images.unsplash.com/photo-1666625628272-a1071f6f7173","text":"1、Python 深拷贝和浅拷贝概念理解前提知识 Python 中对象包含的三个基本要素，分别是：id(身份标识)、type(数据类型)和value(值)。 is和 == 都是对对象进行比较判断作用的，但比较判断的内容并不相同： == 是python标准操作符中的比较操作符，用来...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":12,"path":"api/categories/Python.json"}],"tags":[{"name":"Python面试题","slug":"Python面试题","count":18,"path":"api/tags/Python面试题.json"}],"author":{"name":"Dongbo Xie","slug":"blog-author","avatar":"https://images-1257166372.cos.ap-shanghai.myqcloud.com/hexo/avator.png","link":"/","description":"虚心学习，用心爱人~","socials":{"github":"https://github.com/Dongbox","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/5412853900","zhihu":"","csdn":"https://blog.csdn.net/dongbox_","juejin":"","customs":{}}}}],"categories":4,"tags":24,"word_count":"34k","post_count":29}